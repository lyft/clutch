syntax = "proto3";

package clutch.resolver.v1;

option go_package = "resolverv1";

import "google/rpc/status.proto";

message StringField {
  string placeholder = 1;
  string default_value = 2;
}

message Option {
  string display_name = 1;
  oneof value {
    string string_value = 2;
  }
}

message OptionField {
  bool include_all_option = 1;
  repeated string include_dynamic_options = 2;
  repeated Option options = 3;
}

message Field {
  string name = 1;
  FieldMetadata metadata = 2;
}

message FieldMetadata {
  string display_name = 1;
  bool required = 2;

  oneof type {
    StringField string_field = 3;
    OptionField option_field = 4;
  }
}

message SchemaMetadata {
  string display_name = 1;
  bool searchable = 2;
}

message Schema {
  // The type URL of the object the schema was produced from, which becomes the 'have' type URL when submitting a
  // filled-in schema.
  string type_url = 1;

  SchemaMetadata metadata = 2;
  repeated Field fields = 3;

  // If the schema is broken, e.g. a required option field is missing options, an error will be returned here to be
  // displayed when that schema is selected.
  google.rpc.Status error = 4;
}
