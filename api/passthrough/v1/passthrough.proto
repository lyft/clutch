syntax = "proto3";

package clutch.passthrough.v1;

option go_package = "github.com/lyft/clutch/backend/api/passthrough/v1;passthrough";

import "api/v1/annotations.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

// The PassthroughAPI enabling calling external API's without minimal setup.
// The services must be configured before calling external API's.
service PassthroughAPI {
  rpc GetPassthrough(GetPassthroughRequest) returns (GetPassthroughResponse) {
    option (google.api.http) = {
      post : "/v1/passthrough/get"
      body : "*"
    };
    option (clutch.api.v1.action).type = READ;
  }
}

message GetPassthroughRequest {
  // The name of a service that is configured
  string service = 1 [ (validate.rules).string.min_len = 1 ];
  // The URI path to call
  string path = 2 [ (validate.rules).string.min_len = 1 ];
  // The request body
  google.protobuf.Value request = 3;
}

message GetPassthroughResponse {
  // The http response code from the service response
  int32 http_status = 1;
  // The full repsonse body
  google.protobuf.Value response = 2;
}
