syntax = "proto3";

package clutch.config.service.auditsink.slack.v1;

option go_package = "github.com/lyft/clutch/backend/api/config/service/auditsink/slack/v1;slackv1";

import "config/service/audit/v1/audit.proto";
import "validate/validate.proto";

message SlackConfig {
  string token = 1 [ (validate.rules).string = {min_bytes : 1} ];

  string channel = 2 [ (validate.rules).string = {min_bytes : 1} ];

  clutch.config.service.audit.v1.Filter filter = 3;

  repeated CustomMessage overrides = 4;
}

// TODO: (sperry) update docs (& clutch.sh) when templatting approach finalized
/*
By default, the sink provides a formatted message using a subset of info in an audit event. A custom
message can alo be created for a `/SERVICE/METHOD` using the metadata (API Request/Response) in an
audit event. The custom message will be appened to the default message for a richer slack audit.
*/
message CustomMessage {
  // The full method in the format of `/SERVICE/METHOD`
  string full_method = 1 [ (validate.rules).string = {min_bytes : 1} ];
  /*
  The slack sink uses the Go text/template pacakge. Example of a custom message for /clutch.k8s.v1.K8sAPI/ResizeHPA:
  "{{Min size: $$Request.sizing.min\nMax size: $$Request.sizing.max}}"
  See https://api.slack.com/reference/surfaces/formatting for Slack markdown formatting
  */
  string message = 2 [ (validate.rules).string = {min_bytes : 1} ];
}
