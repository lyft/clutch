syntax = "proto3";

package clutch.slackbot.v1;

option go_package = "github.com/lyft/clutch/backend/api/slackbot/v1;slackbotv1";

import "api/v1/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

service SlackBotAPI {
  rpc Event(EventRequest) returns (EventResponse) {
    option (google.api.http) = {
      post : "/v1/slackbot/event"
      body : "*"
    };
    option (clutch.api.v1.action).type = READ;
  }
}

// For more details, see:
// https://api.slack.com/apis/connections/events-api#receiving_events
// https://api.slack.com/enterprise/apps/reference#event
message EventRequest {
  // A verification token to validate the event originated from Slack
  string token = 1;
  // if where the event occured is an external shared channel
  bool is_ext_shared_channel = 2;
  // The unique identifier of the workspace where the event occurred
  string team_id = 3;
  // The unique identifier of the installed Slack application
  string api_app_id = 4;
  // The event, an object, that happened
  google.protobuf.Value event = 5;
  // Indicates which kind of event dispatch this is
  string type = 6;
  // An identifier for this specific event, globally unique across all workspaces
  string event_id = 7;
  // The epoch timestamp in seconds indicating when this event was dispatched
  int64 event_time = 9;
  // An identifier for this specific event, can be used with list of authorizations to obtain a
  // full list of installations of your app that this event is visible to
  string event_context = 8;
  // An installation of the app, object type
  google.protobuf.Value authorizations = 10;
  // A randomly generated string produced by Slack. Used as part of the URL verification handshake
  // https://api.slack.com/apis/connections/events-api#the-events-api__subscribing-to-event-types__events-api-request-urls__request-url-configuration--verification__url-verification-handshake
  string challenge = 11;
}

// Respond back to the Slack Events API with a challenge or a 2xx
// https://api.slack.com/apis/connections/events-api#the-events-api__responding-to-events
message EventResponse {
  string challenge = 1;
}