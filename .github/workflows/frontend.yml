name: frontend
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
    paths:
    - 'frontend/**'
    - .github/workflows/frontend.yml
    - Makefile
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          check-latest: true
      - name: Enforce consistent Yarn version
        run: ./tools/install-yarn.sh
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn --cwd frontend install
      - name: build
        run: yarn --cwd frontend build
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          check-latest: true
      - name: Enforce consistent Yarn version
        run: ./tools/install-yarn.sh
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn --cwd frontend install
      - name: Compile packages
        run: yarn --cwd frontend compile:dev
      - run: make frontend-lint
      - run: make frontend-verify
      - run: yarn --cwd frontend test:licenses
  test-e2e:
    name: test e2e
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          check-latest: true
      - name: Enforce consistent Yarn version
        run: ./tools/install-yarn.sh
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn-cache.outputs.dir }}
            ~/go/pkg/mod
          key: ${{ runner.os }}-e2e-${{ hashFiles('**/yarn.lock', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-e2e-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn --cwd frontend install
      - name: Compile packages
        run: yarn --cwd frontend compile:dev
      - name: Test [e2e]
        id: e2e
        run: ./tools/frontend-e2e.sh
      - name: Upload end-to-end artifacts
        uses: actions/upload-artifact@v2
        if: failure() && steps.e2e.outcome == 'failure'
        with:
          name: screenshots
          path: ./frontend/packages/app/cypress/screenshots
  test-unit:
    name: test unit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          check-latest: true
      - name: Enforce consistent Yarn version
        run: ./tools/install-yarn.sh
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn --cwd frontend install
      - name: Compile packages
        run: yarn --cwd frontend compile:dev
      - name: Test [unit]
        run: yarn --cwd frontend test:coverage
  publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [build, lint, test-unit, test-e2e]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          check-latest: true
          registry-url: 'https://registry.npmjs.org'
      - name: Enforce consistent Yarn version
        run: ./tools/install-yarn.sh
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn --cwd frontend install
      - name: publish
        run: yarn --cwd frontend publishBeta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
