// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: feedback/v1/feedback.proto

package feedbackv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/lyft/clutch/backend/api/api/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Origin int32

const (
	// currently these are the supported placements for feedback
	Origin_ORIGIN_UNSPECIFIED Origin = 0
	Origin_HEADER             Origin = 1
	Origin_WIZARD             Origin = 2
)

// Enum value maps for Origin.
var (
	Origin_name = map[int32]string{
		0: "ORIGIN_UNSPECIFIED",
		1: "HEADER",
		2: "WIZARD",
	}
	Origin_value = map[string]int32{
		"ORIGIN_UNSPECIFIED": 0,
		"HEADER":             1,
		"WIZARD":             2,
	}
)

func (x Origin) Enum() *Origin {
	p := new(Origin)
	*p = x
	return p
}

func (x Origin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Origin) Descriptor() protoreflect.EnumDescriptor {
	return file_feedback_v1_feedback_proto_enumTypes[0].Descriptor()
}

func (Origin) Type() protoreflect.EnumType {
	return &file_feedback_v1_feedback_proto_enumTypes[0]
}

func (x Origin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Origin.Descriptor instead.
func (Origin) EnumDescriptor() ([]byte, []int) {
	return file_feedback_v1_feedback_proto_rawDescGZIP(), []int{0}
}

type GetQuestionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the origin of the feedback entry which gets mapped to a origin-specific question
	// multiple origins can be passed in the request to return their specific question
	Origins []Origin `protobuf:"varint,1,rep,packed,name=origins,proto3,enum=clutch.feedback.v1.Origin" json:"origins,omitempty"`
	// future: have rules on whether a user should see the feedback questions
	User string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetQuestionsRequest) Reset() {
	*x = GetQuestionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_v1_feedback_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsRequest) ProtoMessage() {}

func (x *GetQuestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_v1_feedback_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionsRequest) Descriptor() ([]byte, []int) {
	return file_feedback_v1_feedback_proto_rawDescGZIP(), []int{0}
}

func (x *GetQuestionsRequest) GetOrigins() []Origin {
	if x != nil {
		return x.Origins
	}
	return nil
}

func (x *GetQuestionsRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type RatingOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the text (i.e. "bad", "ok", "great") for each value in the rating system
	// currently a three-point rating system (and UI designs) are supported
	One   string `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
	Two   string `protobuf:"bytes,2,opt,name=two,proto3" json:"two,omitempty"`
	Three string `protobuf:"bytes,3,opt,name=three,proto3" json:"three,omitempty"`
}

func (x *RatingOptions) Reset() {
	*x = RatingOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_v1_feedback_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingOptions) ProtoMessage() {}

func (x *RatingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_v1_feedback_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingOptions.ProtoReflect.Descriptor instead.
func (*RatingOptions) Descriptor() ([]byte, []int) {
	return file_feedback_v1_feedback_proto_rawDescGZIP(), []int{1}
}

func (x *RatingOptions) GetOne() string {
	if x != nil {
		return x.One
	}
	return ""
}

func (x *RatingOptions) GetTwo() string {
	if x != nil {
		return x.Two
	}
	return ""
}

func (x *RatingOptions) GetThree() string {
	if x != nil {
		return x.Three
	}
	return ""
}

type OriginQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the question for the rating options
	Question string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	// the prompt for the freeform feedback
	FreeformQuestion string `protobuf:"bytes,2,opt,name=freeform_question,json=freeformQuestion,proto3" json:"freeform_question,omitempty"`
	// feedback options to present to the user (i.e. "bad", "ok", "great")
	RatingOptions *RatingOptions `protobuf:"bytes,3,opt,name=rating_options,json=ratingOptions,proto3" json:"rating_options,omitempty"`
	// future: have rules on whether a user should see the feedback question
	Show bool `protobuf:"varint,4,opt,name=show,proto3" json:"show,omitempty"`
}

func (x *OriginQuestion) Reset() {
	*x = OriginQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_v1_feedback_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OriginQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginQuestion) ProtoMessage() {}

func (x *OriginQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_v1_feedback_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginQuestion.ProtoReflect.Descriptor instead.
func (*OriginQuestion) Descriptor() ([]byte, []int) {
	return file_feedback_v1_feedback_proto_rawDescGZIP(), []int{2}
}

func (x *OriginQuestion) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *OriginQuestion) GetFreeformQuestion() string {
	if x != nil {
		return x.FreeformQuestion
	}
	return ""
}

func (x *OriginQuestion) GetRatingOptions() *RatingOptions {
	if x != nil {
		return x.RatingOptions
	}
	return nil
}

func (x *OriginQuestion) GetShow() bool {
	if x != nil {
		return x.Show
	}
	return false
}

type GetQuestionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the key will be the feedback origin name
	OriginQuestion map[string]*OriginQuestion `protobuf:"bytes,1,rep,name=origin_question,json=originQuestion,proto3" json:"origin_question,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetQuestionsResponse) Reset() {
	*x = GetQuestionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_v1_feedback_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsResponse) ProtoMessage() {}

func (x *GetQuestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_v1_feedback_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionsResponse) Descriptor() ([]byte, []int) {
	return file_feedback_v1_feedback_proto_rawDescGZIP(), []int{3}
}

func (x *GetQuestionsResponse) GetOriginQuestion() map[string]*OriginQuestion {
	if x != nil {
		return x.OriginQuestion
	}
	return nil
}

var File_feedback_v1_feedback_proto protoreflect.FileDescriptor

var file_feedback_v1_feedback_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6c,
	0x75, 0x74, 0x63, 0x68, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x7b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x07, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x74,
	0x63, 0x68, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x92, 0x01, 0x0b, 0x08, 0x01, 0x22,
	0x07, 0x82, 0x01, 0x04, 0x10, 0x01, 0x20, 0x00, 0x52, 0x07, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x73, 0x12, 0x1b, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x49,
	0x0a, 0x0d, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x6e,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x77, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x77, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x72, 0x65, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x0e, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x72, 0x65, 0x65,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0d, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73,
	0x68, 0x6f, 0x77, 0x22, 0xe4, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0f,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x65, 0x0a, 0x13, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c,
	0x75, 0x74, 0x63, 0x68, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x38, 0x0a, 0x06, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x49, 0x5a, 0x41,
	0x52, 0x44, 0x10, 0x02, 0x32, 0x9d, 0x01, 0x0a, 0x0b, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x50, 0x49, 0x12, 0x8d, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x67,
	0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0xaa, 0xe1,
	0x1c, 0x02, 0x08, 0x02, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6c, 0x79, 0x66, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x3b, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_feedback_v1_feedback_proto_rawDescOnce sync.Once
	file_feedback_v1_feedback_proto_rawDescData = file_feedback_v1_feedback_proto_rawDesc
)

func file_feedback_v1_feedback_proto_rawDescGZIP() []byte {
	file_feedback_v1_feedback_proto_rawDescOnce.Do(func() {
		file_feedback_v1_feedback_proto_rawDescData = protoimpl.X.CompressGZIP(file_feedback_v1_feedback_proto_rawDescData)
	})
	return file_feedback_v1_feedback_proto_rawDescData
}

var file_feedback_v1_feedback_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_feedback_v1_feedback_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_feedback_v1_feedback_proto_goTypes = []interface{}{
	(Origin)(0),                  // 0: clutch.feedback.v1.Origin
	(*GetQuestionsRequest)(nil),  // 1: clutch.feedback.v1.GetQuestionsRequest
	(*RatingOptions)(nil),        // 2: clutch.feedback.v1.RatingOptions
	(*OriginQuestion)(nil),       // 3: clutch.feedback.v1.OriginQuestion
	(*GetQuestionsResponse)(nil), // 4: clutch.feedback.v1.GetQuestionsResponse
	nil,                          // 5: clutch.feedback.v1.GetQuestionsResponse.OriginQuestionEntry
}
var file_feedback_v1_feedback_proto_depIdxs = []int32{
	0, // 0: clutch.feedback.v1.GetQuestionsRequest.origins:type_name -> clutch.feedback.v1.Origin
	2, // 1: clutch.feedback.v1.OriginQuestion.rating_options:type_name -> clutch.feedback.v1.RatingOptions
	5, // 2: clutch.feedback.v1.GetQuestionsResponse.origin_question:type_name -> clutch.feedback.v1.GetQuestionsResponse.OriginQuestionEntry
	3, // 3: clutch.feedback.v1.GetQuestionsResponse.OriginQuestionEntry.value:type_name -> clutch.feedback.v1.OriginQuestion
	1, // 4: clutch.feedback.v1.FeedbackAPI.GetQuestions:input_type -> clutch.feedback.v1.GetQuestionsRequest
	4, // 5: clutch.feedback.v1.FeedbackAPI.GetQuestions:output_type -> clutch.feedback.v1.GetQuestionsResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_feedback_v1_feedback_proto_init() }
func file_feedback_v1_feedback_proto_init() {
	if File_feedback_v1_feedback_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_feedback_v1_feedback_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedback_v1_feedback_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedback_v1_feedback_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OriginQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedback_v1_feedback_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_feedback_v1_feedback_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_feedback_v1_feedback_proto_goTypes,
		DependencyIndexes: file_feedback_v1_feedback_proto_depIdxs,
		EnumInfos:         file_feedback_v1_feedback_proto_enumTypes,
		MessageInfos:      file_feedback_v1_feedback_proto_msgTypes,
	}.Build()
	File_feedback_v1_feedback_proto = out.File
	file_feedback_v1_feedback_proto_rawDesc = nil
	file_feedback_v1_feedback_proto_goTypes = nil
	file_feedback_v1_feedback_proto_depIdxs = nil
}
