// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: config/gateway/v1/gateway.proto

package gatewayv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	duration "github.com/golang/protobuf/ptypes/duration"
	v1 "github.com/lyft/clutch/backend/api/config/middleware/accesslog/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Logger_Level int32

const (
	Logger_UNSPECIFIED Logger_Level = 0
	Logger_DEBUG       Logger_Level = 1
	Logger_INFO        Logger_Level = 2
	Logger_WARN        Logger_Level = 3
	Logger_ERROR       Logger_Level = 4
	Logger_PANIC       Logger_Level = 5
	Logger_FATAL       Logger_Level = 6
)

// Enum value maps for Logger_Level.
var (
	Logger_Level_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "DEBUG",
		2: "INFO",
		3: "WARN",
		4: "ERROR",
		5: "PANIC",
		6: "FATAL",
	}
	Logger_Level_value = map[string]int32{
		"UNSPECIFIED": 0,
		"DEBUG":       1,
		"INFO":        2,
		"WARN":        3,
		"ERROR":       4,
		"PANIC":       5,
		"FATAL":       6,
	}
)

func (x Logger_Level) Enum() *Logger_Level {
	p := new(Logger_Level)
	*p = x
	return p
}

func (x Logger_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Logger_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_config_gateway_v1_gateway_proto_enumTypes[0].Descriptor()
}

func (Logger_Level) Type() protoreflect.EnumType {
	return &file_config_gateway_v1_gateway_proto_enumTypes[0]
}

func (x Logger_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Logger_Level.Descriptor instead.
func (Logger_Level) EnumDescriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{7, 0}
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gateway   *GatewayOptions `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Services  []*Service      `protobuf:"bytes,2,rep,name=services,proto3" json:"services,omitempty"`
	Resolvers []*Resolver     `protobuf:"bytes,3,rep,name=resolvers,proto3" json:"resolvers,omitempty"`
	Modules   []*Module       `protobuf:"bytes,4,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetGateway() *GatewayOptions {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *Config) GetServices() []*Service {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *Config) GetResolvers() []*Resolver {
	if x != nil {
		return x.Resolvers
	}
	return nil
}

func (x *Config) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

type TCPSocket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Port    uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Secure  bool   `protobuf:"varint,3,opt,name=secure,proto3" json:"secure,omitempty"`
}

func (x *TCPSocket) Reset() {
	*x = TCPSocket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCPSocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPSocket) ProtoMessage() {}

func (x *TCPSocket) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPSocket.ProtoReflect.Descriptor instead.
func (*TCPSocket) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *TCPSocket) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TCPSocket) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *TCPSocket) GetSecure() bool {
	if x != nil {
		return x.Secure
	}
	return false
}

type Listener struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Socket:
	//	*Listener_Tcp
	Socket isListener_Socket `protobuf_oneof:"socket"`
}

func (x *Listener) Reset() {
	*x = Listener{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listener) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listener) ProtoMessage() {}

func (x *Listener) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listener.ProtoReflect.Descriptor instead.
func (*Listener) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{2}
}

func (m *Listener) GetSocket() isListener_Socket {
	if m != nil {
		return m.Socket
	}
	return nil
}

func (x *Listener) GetTcp() *TCPSocket {
	if x, ok := x.GetSocket().(*Listener_Tcp); ok {
		return x.Tcp
	}
	return nil
}

type isListener_Socket interface {
	isListener_Socket()
}

type Listener_Tcp struct {
	Tcp *TCPSocket `protobuf:"bytes,1,opt,name=tcp,proto3,oneof"`
}

func (*Listener_Tcp) isListener_Socket() {}

type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Counters, gauges and histograms (i.e. everything except timers) are buffered at the specified interval.
	FlushInterval *duration.Duration `protobuf:"bytes,1,opt,name=flush_interval,json=flushInterval,proto3" json:"flush_interval,omitempty"`
	// The reporter to emit stats. If none specified, then stats will not be reported.
	//
	// Types that are assignable to Reporter:
	//	*Stats_LogReporter_
	//	*Stats_StatsdReporter_
	Reporter isStats_Reporter `protobuf_oneof:"reporter"`
	// Collect go runtime stats, this is disabled by default.
	GoRuntimeStats *Stats_GoRuntimeStats `protobuf:"bytes,4,opt,name=go_runtime_stats,json=goRuntimeStats,proto3" json:"go_runtime_stats,omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *Stats) GetFlushInterval() *duration.Duration {
	if x != nil {
		return x.FlushInterval
	}
	return nil
}

func (m *Stats) GetReporter() isStats_Reporter {
	if m != nil {
		return m.Reporter
	}
	return nil
}

func (x *Stats) GetLogReporter() *Stats_LogReporter {
	if x, ok := x.GetReporter().(*Stats_LogReporter_); ok {
		return x.LogReporter
	}
	return nil
}

func (x *Stats) GetStatsdReporter() *Stats_StatsdReporter {
	if x, ok := x.GetReporter().(*Stats_StatsdReporter_); ok {
		return x.StatsdReporter
	}
	return nil
}

func (x *Stats) GetGoRuntimeStats() *Stats_GoRuntimeStats {
	if x != nil {
		return x.GoRuntimeStats
	}
	return nil
}

type isStats_Reporter interface {
	isStats_Reporter()
}

type Stats_LogReporter_ struct {
	LogReporter *Stats_LogReporter `protobuf:"bytes,2,opt,name=log_reporter,json=logReporter,proto3,oneof"`
}

type Stats_StatsdReporter_ struct {
	StatsdReporter *Stats_StatsdReporter `protobuf:"bytes,3,opt,name=statsd_reporter,json=statsdReporter,proto3,oneof"` //  TODO: Prometheus support.
}

func (*Stats_LogReporter_) isStats_Reporter() {}

func (*Stats_StatsdReporter_) isStats_Reporter() {}

type Timeouts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Default timeout to apply to all requests.
	Default   *duration.Duration `protobuf:"bytes,1,opt,name=default,proto3" json:"default,omitempty"`
	Overrides []*Timeouts_Entry  `protobuf:"bytes,2,rep,name=overrides,proto3" json:"overrides,omitempty"`
}

func (x *Timeouts) Reset() {
	*x = Timeouts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timeouts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timeouts) ProtoMessage() {}

func (x *Timeouts) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timeouts.ProtoReflect.Descriptor instead.
func (*Timeouts) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *Timeouts) GetDefault() *duration.Duration {
	if x != nil {
		return x.Default
	}
	return nil
}

func (x *Timeouts) GetOverrides() []*Timeouts_Entry {
	if x != nil {
		return x.Overrides
	}
	return nil
}

type GatewayOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listener                 *Listener     `protobuf:"bytes,1,opt,name=listener,proto3" json:"listener,omitempty"`
	JsonGrpcLoopbackListener *Listener     `protobuf:"bytes,2,opt,name=json_grpc_loopback_listener,json=jsonGrpcLoopbackListener,proto3" json:"json_grpc_loopback_listener,omitempty"`
	Logger                   *Logger       `protobuf:"bytes,3,opt,name=logger,proto3" json:"logger,omitempty"`
	Stats                    *Stats        `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty"`
	Timeouts                 *Timeouts     `protobuf:"bytes,5,opt,name=timeouts,proto3" json:"timeouts,omitempty"`
	Middleware               []*Middleware `protobuf:"bytes,6,rep,name=middleware,proto3" json:"middleware,omitempty"`
	Assets                   *Assets       `protobuf:"bytes,7,opt,name=assets,proto3" json:"assets,omitempty"`
	EnablePprof              bool          `protobuf:"varint,8,opt,name=enable_pprof,json=enablePprof,proto3" json:"enable_pprof,omitempty"`
	Accesslog                *v1.Config    `protobuf:"bytes,9,opt,name=accesslog,proto3" json:"accesslog,omitempty"`
}

func (x *GatewayOptions) Reset() {
	*x = GatewayOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayOptions) ProtoMessage() {}

func (x *GatewayOptions) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayOptions.ProtoReflect.Descriptor instead.
func (*GatewayOptions) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *GatewayOptions) GetListener() *Listener {
	if x != nil {
		return x.Listener
	}
	return nil
}

func (x *GatewayOptions) GetJsonGrpcLoopbackListener() *Listener {
	if x != nil {
		return x.JsonGrpcLoopbackListener
	}
	return nil
}

func (x *GatewayOptions) GetLogger() *Logger {
	if x != nil {
		return x.Logger
	}
	return nil
}

func (x *GatewayOptions) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *GatewayOptions) GetTimeouts() *Timeouts {
	if x != nil {
		return x.Timeouts
	}
	return nil
}

func (x *GatewayOptions) GetMiddleware() []*Middleware {
	if x != nil {
		return x.Middleware
	}
	return nil
}

func (x *GatewayOptions) GetAssets() *Assets {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *GatewayOptions) GetEnablePprof() bool {
	if x != nil {
		return x.EnablePprof
	}
	return false
}

func (x *GatewayOptions) GetAccesslog() *v1.Config {
	if x != nil {
		return x.Accesslog
	}
	return nil
}

// Assets configuration provide a passthrough host for frontend static assets.
// This is useful if you dont have the ability to enable sticky sessions or a blue/green deploy system in place.
type Assets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Provider:
	//	*Assets_S3
	Provider isAssets_Provider `protobuf_oneof:"provider"`
}

func (x *Assets) Reset() {
	*x = Assets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assets) ProtoMessage() {}

func (x *Assets) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assets.ProtoReflect.Descriptor instead.
func (*Assets) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{6}
}

func (m *Assets) GetProvider() isAssets_Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (x *Assets) GetS3() *Assets_S3Provider {
	if x, ok := x.GetProvider().(*Assets_S3); ok {
		return x.S3
	}
	return nil
}

type isAssets_Provider interface {
	isAssets_Provider()
}

type Assets_S3 struct {
	S3 *Assets_S3Provider `protobuf:"bytes,1,opt,name=s3,proto3,oneof"`
}

func (*Assets_S3) isAssets_Provider() {}

type Logger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level Logger_Level `protobuf:"varint,1,opt,name=level,proto3,enum=clutch.config.gateway.v1.Logger_Level" json:"level,omitempty"`
	// Types that are assignable to Format:
	//	*Logger_Pretty
	Format isLogger_Format `protobuf_oneof:"format"`
}

func (x *Logger) Reset() {
	*x = Logger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logger) ProtoMessage() {}

func (x *Logger) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logger.ProtoReflect.Descriptor instead.
func (*Logger) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *Logger) GetLevel() Logger_Level {
	if x != nil {
		return x.Level
	}
	return Logger_UNSPECIFIED
}

func (m *Logger) GetFormat() isLogger_Format {
	if m != nil {
		return m.Format
	}
	return nil
}

func (x *Logger) GetPretty() bool {
	if x, ok := x.GetFormat().(*Logger_Pretty); ok {
		return x.Pretty
	}
	return false
}

type isLogger_Format interface {
	isLogger_Format()
}

type Logger_Pretty struct {
	Pretty bool `protobuf:"varint,2,opt,name=pretty,proto3,oneof"`
}

func (*Logger_Pretty) isLogger_Format() {}

type Middleware struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TypedConfig *any.Any `protobuf:"bytes,2,opt,name=typed_config,json=typedConfig,proto3" json:"typed_config,omitempty"`
}

func (x *Middleware) Reset() {
	*x = Middleware{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Middleware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Middleware) ProtoMessage() {}

func (x *Middleware) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Middleware.ProtoReflect.Descriptor instead.
func (*Middleware) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *Middleware) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Middleware) GetTypedConfig() *any.Any {
	if x != nil {
		return x.TypedConfig
	}
	return nil
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TypedConfig *any.Any `protobuf:"bytes,2,opt,name=typed_config,json=typedConfig,proto3" json:"typed_config,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{9}
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service) GetTypedConfig() *any.Any {
	if x != nil {
		return x.TypedConfig
	}
	return nil
}

type Resolver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TypedConfig *any.Any `protobuf:"bytes,2,opt,name=typed_config,json=typedConfig,proto3" json:"typed_config,omitempty"`
}

func (x *Resolver) Reset() {
	*x = Resolver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resolver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resolver) ProtoMessage() {}

func (x *Resolver) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resolver.ProtoReflect.Descriptor instead.
func (*Resolver) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{10}
}

func (x *Resolver) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resolver) GetTypedConfig() *any.Any {
	if x != nil {
		return x.TypedConfig
	}
	return nil
}

type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TypedConfig *any.Any `protobuf:"bytes,2,opt,name=typed_config,json=typedConfig,proto3" json:"typed_config,omitempty"`
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{11}
}

func (x *Module) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Module) GetTypedConfig() *any.Any {
	if x != nil {
		return x.TypedConfig
	}
	return nil
}

type Stats_LogReporter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Stats_LogReporter) Reset() {
	*x = Stats_LogReporter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats_LogReporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats_LogReporter) ProtoMessage() {}

func (x *Stats_LogReporter) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats_LogReporter.ProtoReflect.Descriptor instead.
func (*Stats_LogReporter) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{3, 0}
}

type Stats_StatsdReporter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Types that are assignable to TagMode:
	//	*Stats_StatsdReporter_PointTags_
	TagMode isStats_StatsdReporter_TagMode `protobuf_oneof:"tag_mode"`
}

func (x *Stats_StatsdReporter) Reset() {
	*x = Stats_StatsdReporter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats_StatsdReporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats_StatsdReporter) ProtoMessage() {}

func (x *Stats_StatsdReporter) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats_StatsdReporter.ProtoReflect.Descriptor instead.
func (*Stats_StatsdReporter) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Stats_StatsdReporter) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (m *Stats_StatsdReporter) GetTagMode() isStats_StatsdReporter_TagMode {
	if m != nil {
		return m.TagMode
	}
	return nil
}

func (x *Stats_StatsdReporter) GetPointTags() *Stats_StatsdReporter_PointTags {
	if x, ok := x.GetTagMode().(*Stats_StatsdReporter_PointTags_); ok {
		return x.PointTags
	}
	return nil
}

type isStats_StatsdReporter_TagMode interface {
	isStats_StatsdReporter_TagMode()
}

type Stats_StatsdReporter_PointTags_ struct {
	PointTags *Stats_StatsdReporter_PointTags `protobuf:"bytes,2,opt,name=point_tags,json=pointTags,proto3,oneof"`
}

func (*Stats_StatsdReporter_PointTags_) isStats_StatsdReporter_TagMode() {}

type Stats_GoRuntimeStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Collection interval defaults to 10 seconds
	CollectionInterval *duration.Duration `protobuf:"bytes,1,opt,name=collection_interval,json=collectionInterval,proto3" json:"collection_interval,omitempty"`
}

func (x *Stats_GoRuntimeStats) Reset() {
	*x = Stats_GoRuntimeStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats_GoRuntimeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats_GoRuntimeStats) ProtoMessage() {}

func (x *Stats_GoRuntimeStats) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats_GoRuntimeStats.ProtoReflect.Descriptor instead.
func (*Stats_GoRuntimeStats) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{3, 2}
}

func (x *Stats_GoRuntimeStats) GetCollectionInterval() *duration.Duration {
	if x != nil {
		return x.CollectionInterval
	}
	return nil
}

type Stats_StatsdReporter_PointTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Separator string `protobuf:"bytes,1,opt,name=separator,proto3" json:"separator,omitempty"`
}

func (x *Stats_StatsdReporter_PointTags) Reset() {
	*x = Stats_StatsdReporter_PointTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats_StatsdReporter_PointTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats_StatsdReporter_PointTags) ProtoMessage() {}

func (x *Stats_StatsdReporter_PointTags) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats_StatsdReporter_PointTags.ProtoReflect.Descriptor instead.
func (*Stats_StatsdReporter_PointTags) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{3, 1, 0}
}

func (x *Stats_StatsdReporter_PointTags) GetSeparator() string {
	if x != nil {
		return x.Separator
	}
	return ""
}

type Timeouts_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string             `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Method  string             `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Timeout *duration.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Timeouts_Entry) Reset() {
	*x = Timeouts_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timeouts_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timeouts_Entry) ProtoMessage() {}

func (x *Timeouts_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timeouts_Entry.ProtoReflect.Descriptor instead.
func (*Timeouts_Entry) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Timeouts_Entry) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Timeouts_Entry) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Timeouts_Entry) GetTimeout() *duration.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

// To use the S3Provider you must have the AWS service configured
type Assets_S3Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// key is the path to clutchs frontend static assets in the configured bucket
	Key string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Assets_S3Provider) Reset() {
	*x = Assets_S3Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_gateway_v1_gateway_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assets_S3Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assets_S3Provider) ProtoMessage() {}

func (x *Assets_S3Provider) ProtoReflect() protoreflect.Message {
	mi := &file_config_gateway_v1_gateway_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assets_S3Provider.ProtoReflect.Descriptor instead.
func (*Assets_S3Provider) Descriptor() ([]byte, []int) {
	return file_config_gateway_v1_gateway_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Assets_S3Provider) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Assets_S3Provider) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *Assets_S3Provider) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

var File_config_gateway_v1_gateway_proto protoreflect.FileDescriptor

var file_config_gateway_v1_gateway_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x18, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x93, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4c, 0x0a, 0x07, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6c,
	0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6c, 0x75,
	0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x75,
	0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x52, 0x09,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x07, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x75,
	0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x09, 0x54, 0x43, 0x50, 0x53, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x18, 0xff, 0xff, 0x03, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x22, 0x52, 0x0a, 0x08,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x43, 0x50, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03, 0x74, 0x63,
	0x70, 0x42, 0x0d, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x03, 0xf8, 0x42, 0x01,
	0x22, 0xaf, 0x05, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x4f, 0x0a, 0x0e, 0x66, 0x6c,
	0x75, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0xfa,
	0x42, 0x0a, 0xaa, 0x01, 0x07, 0x32, 0x05, 0x10, 0x80, 0xc2, 0xd7, 0x2f, 0x52, 0x0d, 0x66, 0x6c,
	0x75, 0x73, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x50, 0x0a, 0x0c, 0x6c,
	0x6f, 0x67, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12, 0x59, 0x0a,
	0x0f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x64, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x64,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x10, 0x67, 0x6f, 0x5f, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x2e, 0x47, 0x6f, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x0e, 0x67, 0x6f, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x1a, 0x0d, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x72, 0x1a, 0xc5, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x64, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x59,
	0x0a, 0x0a, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x48, 0x00, 0x52, 0x09,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x1a, 0x32, 0x0a, 0x09, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x20, 0x01, 0x52, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x0a, 0x0a,
	0x08, 0x74, 0x61, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x1a, 0x6b, 0x0a, 0x0e, 0x47, 0x6f, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x59, 0x0a, 0x13, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0xaa, 0x01, 0x07, 0x32, 0x05, 0x10, 0x80, 0xc2,
	0xd7, 0x2f, 0x52, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x22, 0x93, 0x02, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x12,
	0x41, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0xfa, 0x42, 0x09,
	0xaa, 0x01, 0x06, 0x08, 0x01, 0x32, 0x02, 0x08, 0x01, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x46, 0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x1a, 0x7c, 0x0a, 0x05, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x41, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0xaa, 0x01, 0x06, 0x08, 0x01, 0x32, 0x02, 0x08, 0x01, 0x52,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xf2, 0x04, 0x0a, 0x0e, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x08, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x61, 0x0a, 0x1b, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x6c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x75,
	0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x18,
	0x6a, 0x73, 0x6f, 0x6e, 0x47, 0x72, 0x70, 0x63, 0x4c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x67,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63,
	0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6c,
	0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x3e, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x73, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x44, 0x0a,
	0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x70, 0x72, 0x6f, 0x66, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x70, 0x72, 0x6f, 0x66,
	0x12, 0x4b, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6c, 0x6f, 0x67, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6c, 0x6f, 0x67, 0x22, 0xa3, 0x01,
	0x0a, 0x06, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x02, 0x73, 0x33, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x53, 0x33, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x02, 0x73, 0x33, 0x1a, 0x4e, 0x0a, 0x0a, 0x53, 0x33, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x22, 0xc4, 0x01, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x12, 0x3c,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e,
	0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x06,
	0x70, 0x72, 0x65, 0x74, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x74, 0x74, 0x79, 0x22, 0x58, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41, 0x52, 0x4e, 0x10, 0x03, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x41,
	0x4e, 0x49, 0x43, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x41, 0x54, 0x41, 0x4c, 0x10, 0x06,
	0x42, 0x08, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x62, 0x0a, 0x0a, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x5f,
	0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x60, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x20, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x74, 0x79, 0x70, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x5e, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x20, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x74, 0x79, 0x70, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6c, 0x79, 0x66, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_gateway_v1_gateway_proto_rawDescOnce sync.Once
	file_config_gateway_v1_gateway_proto_rawDescData = file_config_gateway_v1_gateway_proto_rawDesc
)

func file_config_gateway_v1_gateway_proto_rawDescGZIP() []byte {
	file_config_gateway_v1_gateway_proto_rawDescOnce.Do(func() {
		file_config_gateway_v1_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_gateway_v1_gateway_proto_rawDescData)
	})
	return file_config_gateway_v1_gateway_proto_rawDescData
}

var file_config_gateway_v1_gateway_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_config_gateway_v1_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_config_gateway_v1_gateway_proto_goTypes = []interface{}{
	(Logger_Level)(0),                      // 0: clutch.config.gateway.v1.Logger.Level
	(*Config)(nil),                         // 1: clutch.config.gateway.v1.Config
	(*TCPSocket)(nil),                      // 2: clutch.config.gateway.v1.TCPSocket
	(*Listener)(nil),                       // 3: clutch.config.gateway.v1.Listener
	(*Stats)(nil),                          // 4: clutch.config.gateway.v1.Stats
	(*Timeouts)(nil),                       // 5: clutch.config.gateway.v1.Timeouts
	(*GatewayOptions)(nil),                 // 6: clutch.config.gateway.v1.GatewayOptions
	(*Assets)(nil),                         // 7: clutch.config.gateway.v1.Assets
	(*Logger)(nil),                         // 8: clutch.config.gateway.v1.Logger
	(*Middleware)(nil),                     // 9: clutch.config.gateway.v1.Middleware
	(*Service)(nil),                        // 10: clutch.config.gateway.v1.Service
	(*Resolver)(nil),                       // 11: clutch.config.gateway.v1.Resolver
	(*Module)(nil),                         // 12: clutch.config.gateway.v1.Module
	(*Stats_LogReporter)(nil),              // 13: clutch.config.gateway.v1.Stats.LogReporter
	(*Stats_StatsdReporter)(nil),           // 14: clutch.config.gateway.v1.Stats.StatsdReporter
	(*Stats_GoRuntimeStats)(nil),           // 15: clutch.config.gateway.v1.Stats.GoRuntimeStats
	(*Stats_StatsdReporter_PointTags)(nil), // 16: clutch.config.gateway.v1.Stats.StatsdReporter.PointTags
	(*Timeouts_Entry)(nil),                 // 17: clutch.config.gateway.v1.Timeouts.Entry
	(*Assets_S3Provider)(nil),              // 18: clutch.config.gateway.v1.Assets.S3Provider
	(*duration.Duration)(nil),              // 19: google.protobuf.Duration
	(*v1.Config)(nil),                      // 20: clutch.config.middleware.accesslog.v1.Config
	(*any.Any)(nil),                        // 21: google.protobuf.Any
}
var file_config_gateway_v1_gateway_proto_depIdxs = []int32{
	6,  // 0: clutch.config.gateway.v1.Config.gateway:type_name -> clutch.config.gateway.v1.GatewayOptions
	10, // 1: clutch.config.gateway.v1.Config.services:type_name -> clutch.config.gateway.v1.Service
	11, // 2: clutch.config.gateway.v1.Config.resolvers:type_name -> clutch.config.gateway.v1.Resolver
	12, // 3: clutch.config.gateway.v1.Config.modules:type_name -> clutch.config.gateway.v1.Module
	2,  // 4: clutch.config.gateway.v1.Listener.tcp:type_name -> clutch.config.gateway.v1.TCPSocket
	19, // 5: clutch.config.gateway.v1.Stats.flush_interval:type_name -> google.protobuf.Duration
	13, // 6: clutch.config.gateway.v1.Stats.log_reporter:type_name -> clutch.config.gateway.v1.Stats.LogReporter
	14, // 7: clutch.config.gateway.v1.Stats.statsd_reporter:type_name -> clutch.config.gateway.v1.Stats.StatsdReporter
	15, // 8: clutch.config.gateway.v1.Stats.go_runtime_stats:type_name -> clutch.config.gateway.v1.Stats.GoRuntimeStats
	19, // 9: clutch.config.gateway.v1.Timeouts.default:type_name -> google.protobuf.Duration
	17, // 10: clutch.config.gateway.v1.Timeouts.overrides:type_name -> clutch.config.gateway.v1.Timeouts.Entry
	3,  // 11: clutch.config.gateway.v1.GatewayOptions.listener:type_name -> clutch.config.gateway.v1.Listener
	3,  // 12: clutch.config.gateway.v1.GatewayOptions.json_grpc_loopback_listener:type_name -> clutch.config.gateway.v1.Listener
	8,  // 13: clutch.config.gateway.v1.GatewayOptions.logger:type_name -> clutch.config.gateway.v1.Logger
	4,  // 14: clutch.config.gateway.v1.GatewayOptions.stats:type_name -> clutch.config.gateway.v1.Stats
	5,  // 15: clutch.config.gateway.v1.GatewayOptions.timeouts:type_name -> clutch.config.gateway.v1.Timeouts
	9,  // 16: clutch.config.gateway.v1.GatewayOptions.middleware:type_name -> clutch.config.gateway.v1.Middleware
	7,  // 17: clutch.config.gateway.v1.GatewayOptions.assets:type_name -> clutch.config.gateway.v1.Assets
	20, // 18: clutch.config.gateway.v1.GatewayOptions.accesslog:type_name -> clutch.config.middleware.accesslog.v1.Config
	18, // 19: clutch.config.gateway.v1.Assets.s3:type_name -> clutch.config.gateway.v1.Assets.S3Provider
	0,  // 20: clutch.config.gateway.v1.Logger.level:type_name -> clutch.config.gateway.v1.Logger.Level
	21, // 21: clutch.config.gateway.v1.Middleware.typed_config:type_name -> google.protobuf.Any
	21, // 22: clutch.config.gateway.v1.Service.typed_config:type_name -> google.protobuf.Any
	21, // 23: clutch.config.gateway.v1.Resolver.typed_config:type_name -> google.protobuf.Any
	21, // 24: clutch.config.gateway.v1.Module.typed_config:type_name -> google.protobuf.Any
	16, // 25: clutch.config.gateway.v1.Stats.StatsdReporter.point_tags:type_name -> clutch.config.gateway.v1.Stats.StatsdReporter.PointTags
	19, // 26: clutch.config.gateway.v1.Stats.GoRuntimeStats.collection_interval:type_name -> google.protobuf.Duration
	19, // 27: clutch.config.gateway.v1.Timeouts.Entry.timeout:type_name -> google.protobuf.Duration
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_config_gateway_v1_gateway_proto_init() }
func file_config_gateway_v1_gateway_proto_init() {
	if File_config_gateway_v1_gateway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_gateway_v1_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCPSocket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listener); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timeouts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Middleware); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resolver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats_LogReporter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats_StatsdReporter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats_GoRuntimeStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats_StatsdReporter_PointTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timeouts_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_gateway_v1_gateway_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assets_S3Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_config_gateway_v1_gateway_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Listener_Tcp)(nil),
	}
	file_config_gateway_v1_gateway_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Stats_LogReporter_)(nil),
		(*Stats_StatsdReporter_)(nil),
	}
	file_config_gateway_v1_gateway_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Assets_S3)(nil),
	}
	file_config_gateway_v1_gateway_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Logger_Pretty)(nil),
	}
	file_config_gateway_v1_gateway_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*Stats_StatsdReporter_PointTags_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_gateway_v1_gateway_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_gateway_v1_gateway_proto_goTypes,
		DependencyIndexes: file_config_gateway_v1_gateway_proto_depIdxs,
		EnumInfos:         file_config_gateway_v1_gateway_proto_enumTypes,
		MessageInfos:      file_config_gateway_v1_gateway_proto_msgTypes,
	}.Build()
	File_config_gateway_v1_gateway_proto = out.File
	file_config_gateway_v1_gateway_proto_rawDesc = nil
	file_config_gateway_v1_gateway_proto_goTypes = nil
	file_config_gateway_v1_gateway_proto_depIdxs = nil
}
