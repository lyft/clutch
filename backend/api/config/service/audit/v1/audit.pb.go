// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: config/service/audit/v1/audit.proto

package auditv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Switch to control what field the message
type EventFilter_FilterType int32

const (
	// Amounts to a no-op filter.
	EventFilter_UNSPECIFIED EventFilter_FilterType = 0
	// Compare to the service performing the operation.
	EventFilter_SERVICE EventFilter_FilterType = 1
	// Compare to the method being called.
	EventFilter_METHOD EventFilter_FilterType = 2
	// Compare against the action type of the event.
	EventFilter_TYPE EventFilter_FilterType = 3
)

// Enum value maps for EventFilter_FilterType.
var (
	EventFilter_FilterType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "SERVICE",
		2: "METHOD",
		3: "TYPE",
	}
	EventFilter_FilterType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"SERVICE":     1,
		"METHOD":      2,
		"TYPE":        3,
	}
)

func (x EventFilter_FilterType) Enum() *EventFilter_FilterType {
	p := new(EventFilter_FilterType)
	*p = x
	return p
}

func (x EventFilter_FilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventFilter_FilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_service_audit_v1_audit_proto_enumTypes[0].Descriptor()
}

func (EventFilter_FilterType) Type() protoreflect.EnumType {
	return &file_config_service_audit_v1_audit_proto_enumTypes[0]
}

func (x EventFilter_FilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventFilter_FilterType.Descriptor instead.
func (EventFilter_FilterType) EnumDescriptor() ([]byte, []int) {
	return file_config_service_audit_v1_audit_proto_rawDescGZIP(), []int{0, 0}
}

type EventFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field EventFilter_FilterType `protobuf:"varint,1,opt,name=field,proto3,enum=clutch.config.service.audit.v1.EventFilter_FilterType" json:"field,omitempty"`
	// Types that are assignable to Value:
	//	*EventFilter_Text
	Value isEventFilter_Value `protobuf_oneof:"value"`
}

func (x *EventFilter) Reset() {
	*x = EventFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_service_audit_v1_audit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFilter) ProtoMessage() {}

func (x *EventFilter) ProtoReflect() protoreflect.Message {
	mi := &file_config_service_audit_v1_audit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFilter.ProtoReflect.Descriptor instead.
func (*EventFilter) Descriptor() ([]byte, []int) {
	return file_config_service_audit_v1_audit_proto_rawDescGZIP(), []int{0}
}

func (x *EventFilter) GetField() EventFilter_FilterType {
	if x != nil {
		return x.Field
	}
	return EventFilter_UNSPECIFIED
}

func (m *EventFilter) GetValue() isEventFilter_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *EventFilter) GetText() string {
	if x, ok := x.GetValue().(*EventFilter_Text); ok {
		return x.Text
	}
	return ""
}

type isEventFilter_Value interface {
	isEventFilter_Value()
}

type EventFilter_Text struct {
	// Text to compare against the field to look for a match.
	Text string `protobuf:"bytes,2,opt,name=text,proto3,oneof"`
}

func (*EventFilter_Text) isEventFilter_Value() {}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether to treat the list as a allowlist (default) or a denylist.
	Denylist bool `protobuf:"varint,1,opt,name=denylist,proto3" json:"denylist,omitempty"`
	// The filter rules to apply against messages.
	Rules []*EventFilter `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_service_audit_v1_audit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_config_service_audit_v1_audit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_config_service_audit_v1_audit_proto_rawDescGZIP(), []int{1}
}

func (x *Filter) GetDenylist() bool {
	if x != nil {
		return x.Denylist
	}
	return false
}

func (x *Filter) GetRules() []*EventFilter {
	if x != nil {
		return x.Rules
	}
	return nil
}

type SinkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The rule(s) to filter events between audit source and sink emission.
	Filter *Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *SinkConfig) Reset() {
	*x = SinkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_service_audit_v1_audit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SinkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SinkConfig) ProtoMessage() {}

func (x *SinkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_service_audit_v1_audit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SinkConfig.ProtoReflect.Descriptor instead.
func (*SinkConfig) Descriptor() ([]byte, []int) {
	return file_config_service_audit_v1_audit_proto_rawDescGZIP(), []int{2}
}

func (x *SinkConfig) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the service where the auditor will persist events.
	DbProvider string `protobuf:"bytes,1,opt,name=db_provider,json=dbProvider,proto3" json:"db_provider,omitempty"`
	// The rule to apply before between request ingress and the database.
	Filter *Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// The registered name of sinks to fan-out events to.
	Sinks []string `protobuf:"bytes,3,rep,name=sinks,proto3" json:"sinks,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_service_audit_v1_audit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_config_service_audit_v1_audit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_config_service_audit_v1_audit_proto_rawDescGZIP(), []int{3}
}

func (x *Config) GetDbProvider() string {
	if x != nil {
		return x.DbProvider
	}
	return ""
}

func (x *Config) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Config) GetSinks() []string {
	if x != nil {
		return x.Sinks
	}
	return nil
}

var File_config_service_audit_v1_audit_proto protoreflect.FileDescriptor

var file_config_service_audit_v1_audit_proto_rawDesc = []byte{
	0x0a, 0x23, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc,
	0x01, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4c,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e,
	0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x22, 0x40, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x59,
	0x50, 0x45, 0x10, 0x03, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x67, 0x0a,
	0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x6e, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x65, 0x6e, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x0a, 0x53, 0x69, 0x6e, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0x88, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x28, 0x0a, 0x0b, 0x64, 0x62, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x0a, 0x64,
	0x62, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x75, 0x74,
	0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x6e,
	0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x6b, 0x73, 0x42,
	0x09, 0x5a, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_config_service_audit_v1_audit_proto_rawDescOnce sync.Once
	file_config_service_audit_v1_audit_proto_rawDescData = file_config_service_audit_v1_audit_proto_rawDesc
)

func file_config_service_audit_v1_audit_proto_rawDescGZIP() []byte {
	file_config_service_audit_v1_audit_proto_rawDescOnce.Do(func() {
		file_config_service_audit_v1_audit_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_service_audit_v1_audit_proto_rawDescData)
	})
	return file_config_service_audit_v1_audit_proto_rawDescData
}

var file_config_service_audit_v1_audit_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_config_service_audit_v1_audit_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_config_service_audit_v1_audit_proto_goTypes = []interface{}{
	(EventFilter_FilterType)(0), // 0: clutch.config.service.audit.v1.EventFilter.FilterType
	(*EventFilter)(nil),         // 1: clutch.config.service.audit.v1.EventFilter
	(*Filter)(nil),              // 2: clutch.config.service.audit.v1.Filter
	(*SinkConfig)(nil),          // 3: clutch.config.service.audit.v1.SinkConfig
	(*Config)(nil),              // 4: clutch.config.service.audit.v1.Config
}
var file_config_service_audit_v1_audit_proto_depIdxs = []int32{
	0, // 0: clutch.config.service.audit.v1.EventFilter.field:type_name -> clutch.config.service.audit.v1.EventFilter.FilterType
	1, // 1: clutch.config.service.audit.v1.Filter.rules:type_name -> clutch.config.service.audit.v1.EventFilter
	2, // 2: clutch.config.service.audit.v1.SinkConfig.filter:type_name -> clutch.config.service.audit.v1.Filter
	2, // 3: clutch.config.service.audit.v1.Config.filter:type_name -> clutch.config.service.audit.v1.Filter
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_config_service_audit_v1_audit_proto_init() }
func file_config_service_audit_v1_audit_proto_init() {
	if File_config_service_audit_v1_audit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_service_audit_v1_audit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_service_audit_v1_audit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_service_audit_v1_audit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SinkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_service_audit_v1_audit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_config_service_audit_v1_audit_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*EventFilter_Text)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_service_audit_v1_audit_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_service_audit_v1_audit_proto_goTypes,
		DependencyIndexes: file_config_service_audit_v1_audit_proto_depIdxs,
		EnumInfos:         file_config_service_audit_v1_audit_proto_enumTypes,
		MessageInfos:      file_config_service_audit_v1_audit_proto_msgTypes,
	}.Build()
	File_config_service_audit_v1_audit_proto = out.File
	file_config_service_audit_v1_audit_proto_rawDesc = nil
	file_config_service_audit_v1_audit_proto_goTypes = nil
	file_config_service_audit_v1_audit_proto_depIdxs = nil
}
