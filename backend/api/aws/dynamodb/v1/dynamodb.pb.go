// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.17.3
// source: aws/dynamodb/v1/dynamodb.proto

package ddbv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/lyft/clutch/backend/api/api/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum representing the status of a table.
// https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_TableDescription.html
type Table_Status int32

const (
	// Unspecified status indicates the table status could not be found.
	Table_UNSPECIFIED Table_Status = 0
	// AWS returned a status that isn't recognized.
	Table_UNKNOWN Table_Status = 1
	// Table is in the process of being provisioned.
	Table_CREATING Table_Status = 2
	// Table is undergoing an update.
	Table_UPDATING Table_Status = 3
	// Table is in the process of being deleted.
	Table_DELETING Table_Status = 4
	// Table is active and available for actions.
	Table_ACTIVE Table_Status = 5
	// The KMS key used to encrypt the table is inaccessible.
	// Table operations may fail without the key.
	Table_INACCESSIBLE_ENCRYPTION_CREDENTIALS Table_Status = 6
	// Table is in the process of being moved to archives.
	Table_ARCHIVING Table_Status = 7
	// Table is archived.
	Table_ARCHIVED Table_Status = 8
)

// Enum value maps for Table_Status.
var (
	Table_Status_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "UNKNOWN",
		2: "CREATING",
		3: "UPDATING",
		4: "DELETING",
		5: "ACTIVE",
		6: "INACCESSIBLE_ENCRYPTION_CREDENTIALS",
		7: "ARCHIVING",
		8: "ARCHIVED",
	}
	Table_Status_value = map[string]int32{
		"UNSPECIFIED":                         0,
		"UNKNOWN":                             1,
		"CREATING":                            2,
		"UPDATING":                            3,
		"DELETING":                            4,
		"ACTIVE":                              5,
		"INACCESSIBLE_ENCRYPTION_CREDENTIALS": 6,
		"ARCHIVING":                           7,
		"ARCHIVED":                            8,
	}
)

func (x Table_Status) Enum() *Table_Status {
	p := new(Table_Status)
	*p = x
	return p
}

func (x Table_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Table_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_aws_dynamodb_v1_dynamodb_proto_enumTypes[0].Descriptor()
}

func (Table_Status) Type() protoreflect.EnumType {
	return &file_aws_dynamodb_v1_dynamodb_proto_enumTypes[0]
}

func (x Table_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Table_Status.Descriptor instead.
func (Table_Status) EnumDescriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{0, 0}
}

// enum of a table's billing mode
type Table_BillingMode int32

const (
	// Billing mode for table could not be found.
	Table_BILLING_UNSPECIFIED Table_BillingMode = 0
	// Unknown mode type returned from server.
	Table_BILLING_UNKNOWN Table_BillingMode = 1
	// Table and index capacities are provisioned.
	Table_PROVISIONED Table_BillingMode = 2
	// Table and index capacity are on-demand.
	Table_PAY_PER_REQUEST Table_BillingMode = 3
)

// Enum value maps for Table_BillingMode.
var (
	Table_BillingMode_name = map[int32]string{
		0: "BILLING_UNSPECIFIED",
		1: "BILLING_UNKNOWN",
		2: "PROVISIONED",
		3: "PAY_PER_REQUEST",
	}
	Table_BillingMode_value = map[string]int32{
		"BILLING_UNSPECIFIED": 0,
		"BILLING_UNKNOWN":     1,
		"PROVISIONED":         2,
		"PAY_PER_REQUEST":     3,
	}
)

func (x Table_BillingMode) Enum() *Table_BillingMode {
	p := new(Table_BillingMode)
	*p = x
	return p
}

func (x Table_BillingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Table_BillingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_aws_dynamodb_v1_dynamodb_proto_enumTypes[1].Descriptor()
}

func (Table_BillingMode) Type() protoreflect.EnumType {
	return &file_aws_dynamodb_v1_dynamodb_proto_enumTypes[1]
}

func (x Table_BillingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Table_BillingMode.Descriptor instead.
func (Table_BillingMode) EnumDescriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{0, 1}
}

// Enum that represents the current GSI state
type GlobalSecondaryIndex_Status int32

const (
	// Unspecified indicates GSI status could not be found.
	GlobalSecondaryIndex_UNSPECIFIED GlobalSecondaryIndex_Status = 0
	// AWS returned a status that isn't recognized.
	GlobalSecondaryIndex_UNKNOWN GlobalSecondaryIndex_Status = 1
	// GSI is in process of being created.
	GlobalSecondaryIndex_CREATING GlobalSecondaryIndex_Status = 2
	// GSI is in process of being updated.
	GlobalSecondaryIndex_UPDATING GlobalSecondaryIndex_Status = 3
	// GSI is in process of being deleted.
	GlobalSecondaryIndex_DELETING GlobalSecondaryIndex_Status = 4
	// GSI is active and available for actions.
	GlobalSecondaryIndex_ACTIVE GlobalSecondaryIndex_Status = 5
)

// Enum value maps for GlobalSecondaryIndex_Status.
var (
	GlobalSecondaryIndex_Status_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "UNKNOWN",
		2: "CREATING",
		3: "UPDATING",
		4: "DELETING",
		5: "ACTIVE",
	}
	GlobalSecondaryIndex_Status_value = map[string]int32{
		"UNSPECIFIED": 0,
		"UNKNOWN":     1,
		"CREATING":    2,
		"UPDATING":    3,
		"DELETING":    4,
		"ACTIVE":      5,
	}
)

func (x GlobalSecondaryIndex_Status) Enum() *GlobalSecondaryIndex_Status {
	p := new(GlobalSecondaryIndex_Status)
	*p = x
	return p
}

func (x GlobalSecondaryIndex_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GlobalSecondaryIndex_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_aws_dynamodb_v1_dynamodb_proto_enumTypes[2].Descriptor()
}

func (GlobalSecondaryIndex_Status) Type() protoreflect.EnumType {
	return &file_aws_dynamodb_v1_dynamodb_proto_enumTypes[2]
}

func (x GlobalSecondaryIndex_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GlobalSecondaryIndex_Status.Descriptor instead.
func (GlobalSecondaryIndex_Status) EnumDescriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{1, 0}
}

type KeySchema_Type int32

const (
	// Undetermined value
	KeySchema_UNSPECIFIED KeySchema_Type = 0
	// AWS returns a type that isn't recognized
	KeySchema_UNKNOWN KeySchema_Type = 1
	// Partition Key
	KeySchema_HASH KeySchema_Type = 2
	// Sort Key
	KeySchema_RANGE KeySchema_Type = 3
)

// Enum value maps for KeySchema_Type.
var (
	KeySchema_Type_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "UNKNOWN",
		2: "HASH",
		3: "RANGE",
	}
	KeySchema_Type_value = map[string]int32{
		"UNSPECIFIED": 0,
		"UNKNOWN":     1,
		"HASH":        2,
		"RANGE":       3,
	}
)

func (x KeySchema_Type) Enum() *KeySchema_Type {
	p := new(KeySchema_Type)
	*p = x
	return p
}

func (x KeySchema_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeySchema_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_aws_dynamodb_v1_dynamodb_proto_enumTypes[3].Descriptor()
}

func (KeySchema_Type) Type() protoreflect.EnumType {
	return &file_aws_dynamodb_v1_dynamodb_proto_enumTypes[3]
}

func (x KeySchema_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeySchema_Type.Descriptor instead.
func (KeySchema_Type) EnumDescriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{4, 0}
}

type ContinuousBackups_Status int32

const (
	// Undetermined value
	ContinuousBackups_UNSPECIFIED ContinuousBackups_Status = 0
	// AWS returns a status that isn't recognized
	ContinuousBackups_UNKNOWN ContinuousBackups_Status = 1
	// Setting is enabled
	ContinuousBackups_ENABLED ContinuousBackups_Status = 2
	// Setting is disabled
	ContinuousBackups_DISABLED ContinuousBackups_Status = 3
)

// Enum value maps for ContinuousBackups_Status.
var (
	ContinuousBackups_Status_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "UNKNOWN",
		2: "ENABLED",
		3: "DISABLED",
	}
	ContinuousBackups_Status_value = map[string]int32{
		"UNSPECIFIED": 0,
		"UNKNOWN":     1,
		"ENABLED":     2,
		"DISABLED":    3,
	}
)

func (x ContinuousBackups_Status) Enum() *ContinuousBackups_Status {
	p := new(ContinuousBackups_Status)
	*p = x
	return p
}

func (x ContinuousBackups_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContinuousBackups_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_aws_dynamodb_v1_dynamodb_proto_enumTypes[4].Descriptor()
}

func (ContinuousBackups_Status) Type() protoreflect.EnumType {
	return &file_aws_dynamodb_v1_dynamodb_proto_enumTypes[4]
}

func (x ContinuousBackups_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContinuousBackups_Status.Descriptor instead.
func (ContinuousBackups_Status) EnumDescriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{6, 0}
}

// A Dynamodb table
type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the Dynamodb table.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// AWS regional location for the table.
	Region string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	// The global secondary indexes present on a table.
	// A table may have anywhere from 0-20 GSIs per AWS default quota.
	GlobalSecondaryIndexes []*GlobalSecondaryIndex `protobuf:"bytes,3,rep,name=global_secondary_indexes,json=globalSecondaryIndexes,proto3" json:"global_secondary_indexes,omitempty"`
	// The currently provisioned throughput of a table.
	// Minimum throughput on a provisioned table is 1 RCU/1 WCU.
	// Tables with ON-DEMAND capacity will return a provisioned throughput of 0 RCU/0 WCU.
	ProvisionedThroughput *Throughput `protobuf:"bytes,4,opt,name=provisioned_throughput,json=provisionedThroughput,proto3" json:"provisioned_throughput,omitempty"`
	// Table status.
	Status Table_Status `protobuf:"varint,5,opt,name=status,proto3,enum=clutch.aws.dynamodb.v1.Table_Status" json:"status,omitempty"`
	// Table billing mode.
	BillingMode Table_BillingMode `protobuf:"varint,6,opt,name=billing_mode,json=billingMode,proto3,enum=clutch.aws.dynamodb.v1.Table_BillingMode" json:"billing_mode,omitempty"`
	// The aws acccount
	Account string `protobuf:"bytes,7,opt,name=account,proto3" json:"account,omitempty"`
	// Key schema details for the table
	KeySchemas []*KeySchema `protobuf:"bytes,8,rep,name=key_schemas,json=keySchemas,proto3" json:"key_schemas,omitempty"`
	// Collection of all the attributes for a table
	AttributeDefinitions []*AttributeDefinition `protobuf:"bytes,9,rep,name=attribute_definitions,json=attributeDefinitions,proto3" json:"attribute_definitions,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{0}
}

func (x *Table) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Table) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Table) GetGlobalSecondaryIndexes() []*GlobalSecondaryIndex {
	if x != nil {
		return x.GlobalSecondaryIndexes
	}
	return nil
}

func (x *Table) GetProvisionedThroughput() *Throughput {
	if x != nil {
		return x.ProvisionedThroughput
	}
	return nil
}

func (x *Table) GetStatus() Table_Status {
	if x != nil {
		return x.Status
	}
	return Table_UNSPECIFIED
}

func (x *Table) GetBillingMode() Table_BillingMode {
	if x != nil {
		return x.BillingMode
	}
	return Table_BILLING_UNSPECIFIED
}

func (x *Table) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Table) GetKeySchemas() []*KeySchema {
	if x != nil {
		return x.KeySchemas
	}
	return nil
}

func (x *Table) GetAttributeDefinitions() []*AttributeDefinition {
	if x != nil {
		return x.AttributeDefinitions
	}
	return nil
}

// A global secondary index.
type GlobalSecondaryIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the global secondary index.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Capacity settings on the GSI.
	ProvisionedThroughput *Throughput `protobuf:"bytes,2,opt,name=provisioned_throughput,json=provisionedThroughput,proto3" json:"provisioned_throughput,omitempty"`
	// Current GSI status.
	Status GlobalSecondaryIndex_Status `protobuf:"varint,3,opt,name=status,proto3,enum=clutch.aws.dynamodb.v1.GlobalSecondaryIndex_Status" json:"status,omitempty"`
}

func (x *GlobalSecondaryIndex) Reset() {
	*x = GlobalSecondaryIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSecondaryIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSecondaryIndex) ProtoMessage() {}

func (x *GlobalSecondaryIndex) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSecondaryIndex.ProtoReflect.Descriptor instead.
func (*GlobalSecondaryIndex) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{1}
}

func (x *GlobalSecondaryIndex) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GlobalSecondaryIndex) GetProvisionedThroughput() *Throughput {
	if x != nil {
		return x.ProvisionedThroughput
	}
	return nil
}

func (x *GlobalSecondaryIndex) GetStatus() GlobalSecondaryIndex_Status {
	if x != nil {
		return x.Status
	}
	return GlobalSecondaryIndex_UNSPECIFIED
}

// Represents an Update action on a GSI, which changes the provisioned capacity.
type IndexUpdateAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IndexThroughput *Throughput `protobuf:"bytes,2,opt,name=index_throughput,json=indexThroughput,proto3" json:"index_throughput,omitempty"`
}

func (x *IndexUpdateAction) Reset() {
	*x = IndexUpdateAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexUpdateAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexUpdateAction) ProtoMessage() {}

func (x *IndexUpdateAction) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexUpdateAction.ProtoReflect.Descriptor instead.
func (*IndexUpdateAction) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{2}
}

func (x *IndexUpdateAction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IndexUpdateAction) GetIndexThroughput() *Throughput {
	if x != nil {
		return x.IndexThroughput
	}
	return nil
}

// Represents a throughput object that describes a current or pending provisioned capacity.
type Throughput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WriteCapacityUnits int64 `protobuf:"varint,1,opt,name=write_capacity_units,json=writeCapacityUnits,proto3" json:"write_capacity_units,omitempty"`
	ReadCapacityUnits  int64 `protobuf:"varint,2,opt,name=read_capacity_units,json=readCapacityUnits,proto3" json:"read_capacity_units,omitempty"`
}

func (x *Throughput) Reset() {
	*x = Throughput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Throughput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Throughput) ProtoMessage() {}

func (x *Throughput) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Throughput.ProtoReflect.Descriptor instead.
func (*Throughput) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{3}
}

func (x *Throughput) GetWriteCapacityUnits() int64 {
	if x != nil {
		return x.WriteCapacityUnits
	}
	return 0
}

func (x *Throughput) GetReadCapacityUnits() int64 {
	if x != nil {
		return x.ReadCapacityUnits
	}
	return 0
}

// Represents the Key structure for the table
type KeySchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeName string         `protobuf:"bytes,1,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	Type          KeySchema_Type `protobuf:"varint,2,opt,name=type,proto3,enum=clutch.aws.dynamodb.v1.KeySchema_Type" json:"type,omitempty"`
}

func (x *KeySchema) Reset() {
	*x = KeySchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeySchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeySchema) ProtoMessage() {}

func (x *KeySchema) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeySchema.ProtoReflect.Descriptor instead.
func (*KeySchema) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{4}
}

func (x *KeySchema) GetAttributeName() string {
	if x != nil {
		return x.AttributeName
	}
	return ""
}

func (x *KeySchema) GetType() KeySchema_Type {
	if x != nil {
		return x.Type
	}
	return KeySchema_UNSPECIFIED
}

// Represents the collection of attributes for the table
type AttributeDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeName string `protobuf:"bytes,1,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	AttributeType string `protobuf:"bytes,2,opt,name=attribute_type,json=attributeType,proto3" json:"attribute_type,omitempty"`
}

func (x *AttributeDefinition) Reset() {
	*x = AttributeDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeDefinition) ProtoMessage() {}

func (x *AttributeDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeDefinition.ProtoReflect.Descriptor instead.
func (*AttributeDefinition) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{5}
}

func (x *AttributeDefinition) GetAttributeName() string {
	if x != nil {
		return x.AttributeName
	}
	return ""
}

func (x *AttributeDefinition) GetAttributeType() string {
	if x != nil {
		return x.AttributeType
	}
	return ""
}

// Represents the description for a table's continuous backups and point in time recovery
type ContinuousBackups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the status of continuous backups
	ContinuousBackupsStatus ContinuousBackups_Status `protobuf:"varint,1,opt,name=continuous_backups_status,json=continuousBackupsStatus,proto3,enum=clutch.aws.dynamodb.v1.ContinuousBackups_Status" json:"continuous_backups_status,omitempty"`
	// the status of point in time recovery
	PointInTimeRecoveryStatus ContinuousBackups_Status `protobuf:"varint,2,opt,name=point_in_time_recovery_status,json=pointInTimeRecoveryStatus,proto3,enum=clutch.aws.dynamodb.v1.ContinuousBackups_Status" json:"point_in_time_recovery_status,omitempty"`
	// the earliest time you can restore a table to using PITR
	EarliestRestorableDateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=earliest_restorable_date_time,json=earliestRestorableDateTime,proto3" json:"earliest_restorable_date_time,omitempty"`
	// the latest time you can restore a table to using PITR
	LatestRestorableDateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=latest_restorable_date_time,json=latestRestorableDateTime,proto3" json:"latest_restorable_date_time,omitempty"`
}

func (x *ContinuousBackups) Reset() {
	*x = ContinuousBackups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContinuousBackups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContinuousBackups) ProtoMessage() {}

func (x *ContinuousBackups) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContinuousBackups.ProtoReflect.Descriptor instead.
func (*ContinuousBackups) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{6}
}

func (x *ContinuousBackups) GetContinuousBackupsStatus() ContinuousBackups_Status {
	if x != nil {
		return x.ContinuousBackupsStatus
	}
	return ContinuousBackups_UNSPECIFIED
}

func (x *ContinuousBackups) GetPointInTimeRecoveryStatus() ContinuousBackups_Status {
	if x != nil {
		return x.PointInTimeRecoveryStatus
	}
	return ContinuousBackups_UNSPECIFIED
}

func (x *ContinuousBackups) GetEarliestRestorableDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EarliestRestorableDateTime
	}
	return nil
}

func (x *ContinuousBackups) GetLatestRestorableDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LatestRestorableDateTime
	}
	return nil
}

// A request for table information.
type DescribeTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Region    string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Account   string `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *DescribeTableRequest) Reset() {
	*x = DescribeTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTableRequest) ProtoMessage() {}

func (x *DescribeTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTableRequest.ProtoReflect.Descriptor instead.
func (*DescribeTableRequest) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeTableRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *DescribeTableRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *DescribeTableRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

// The result of requesting a table.
type DescribeTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table *Table `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *DescribeTableResponse) Reset() {
	*x = DescribeTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTableResponse) ProtoMessage() {}

func (x *DescribeTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTableResponse.ProtoReflect.Descriptor instead.
func (*DescribeTableResponse) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeTableResponse) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

// A request for a table's continuous backups description.
type DescribeContinuousBackupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Region    string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Account   string `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *DescribeContinuousBackupsRequest) Reset() {
	*x = DescribeContinuousBackupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeContinuousBackupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeContinuousBackupsRequest) ProtoMessage() {}

func (x *DescribeContinuousBackupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeContinuousBackupsRequest.ProtoReflect.Descriptor instead.
func (*DescribeContinuousBackupsRequest) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{9}
}

func (x *DescribeContinuousBackupsRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *DescribeContinuousBackupsRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *DescribeContinuousBackupsRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

// The result of requesting a table's continuous backups description.
type DescribeContinuousBackupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContinuousBackups *ContinuousBackups `protobuf:"bytes,1,opt,name=continuous_backups,json=continuousBackups,proto3" json:"continuous_backups,omitempty"`
}

func (x *DescribeContinuousBackupsResponse) Reset() {
	*x = DescribeContinuousBackupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeContinuousBackupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeContinuousBackupsResponse) ProtoMessage() {}

func (x *DescribeContinuousBackupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeContinuousBackupsResponse.ProtoReflect.Descriptor instead.
func (*DescribeContinuousBackupsResponse) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{10}
}

func (x *DescribeContinuousBackupsResponse) GetContinuousBackups() *ContinuousBackups {
	if x != nil {
		return x.ContinuousBackups
	}
	return nil
}

// A request to update a table's capacity.
// Any combination of table capacity and GSI capacities can be updated in a single request.
// If no throughputs or GSI updates are specified, the table is unchanged.
type UpdateCapacityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName       string               `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Region          string               `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	TableThroughput *Throughput          `protobuf:"bytes,3,opt,name=table_throughput,json=tableThroughput,proto3" json:"table_throughput,omitempty"`
	GsiUpdates      []*IndexUpdateAction `protobuf:"bytes,4,rep,name=gsi_updates,json=gsiUpdates,proto3" json:"gsi_updates,omitempty"`
	IgnoreMaximums  bool                 `protobuf:"varint,5,opt,name=ignore_maximums,json=ignoreMaximums,proto3" json:"ignore_maximums,omitempty"`
	Account         string               `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *UpdateCapacityRequest) Reset() {
	*x = UpdateCapacityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCapacityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCapacityRequest) ProtoMessage() {}

func (x *UpdateCapacityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCapacityRequest.ProtoReflect.Descriptor instead.
func (*UpdateCapacityRequest) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateCapacityRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UpdateCapacityRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateCapacityRequest) GetTableThroughput() *Throughput {
	if x != nil {
		return x.TableThroughput
	}
	return nil
}

func (x *UpdateCapacityRequest) GetGsiUpdates() []*IndexUpdateAction {
	if x != nil {
		return x.GsiUpdates
	}
	return nil
}

func (x *UpdateCapacityRequest) GetIgnoreMaximums() bool {
	if x != nil {
		return x.IgnoreMaximums
	}
	return false
}

func (x *UpdateCapacityRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

// The result of requesting a capacity update.
// Successful calls return an updated table description.
type UpdateCapacityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table *Table `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *UpdateCapacityResponse) Reset() {
	*x = UpdateCapacityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCapacityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCapacityResponse) ProtoMessage() {}

func (x *UpdateCapacityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCapacityResponse.ProtoReflect.Descriptor instead.
func (*UpdateCapacityResponse) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateCapacityResponse) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

var File_aws_dynamodb_v1_dynamodb_proto protoreflect.FileDescriptor

var file_aws_dynamodb_v1_dynamodb_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x77, 0x73, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x16, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x07, 0x0a, 0x05, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x66, 0x0a, 0x18, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x16, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70,
	0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63,
	0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x52, 0x15, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68,
	0x70, 0x75, 0x74, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x4c, 0x0a, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68,
	0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0b, 0x6b, 0x65, 0x79,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x12, 0x60, 0x0a,
	0x15, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63,
	0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xa2, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x50, 0x44, 0x41, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x05, 0x12, 0x27,
	0x0a, 0x23, 0x49, 0x4e, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x5f, 0x45,
	0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e,
	0x54, 0x49, 0x41, 0x4c, 0x53, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x52, 0x43, 0x48, 0x49,
	0x56, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56,
	0x45, 0x44, 0x10, 0x08, 0x22, 0x61, 0x0a, 0x0b, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x49, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x42, 0x49, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x59, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x03, 0x3a, 0x3f, 0xb2, 0xe1, 0x1c, 0x3b, 0x0a, 0x39, 0x0a,
	0x1c, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x7b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x7d, 0x2f, 0x7b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x22, 0xb0, 0x02, 0x0a, 0x14, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x59, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61,
	0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74,
	0x12, 0x4b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x33, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5c, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12,
	0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x05, 0x22, 0x76, 0x0a, 0x11, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x74, 0x68,
	0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70,
	0x75, 0x74, 0x52, 0x0f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68,
	0x70, 0x75, 0x74, 0x22, 0x6e, 0x0a, 0x0a, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75,
	0x74, 0x12, 0x30, 0x0a, 0x14, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x12, 0x77, 0x72, 0x69, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x72, 0x65, 0x61, 0x64, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e,
	0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x4b, 0x65, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x39, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x41,
	0x53, 0x48, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x03, 0x22,
	0x63, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xf2, 0x03, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x6f, 0x75, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x12, 0x6c, 0x0a, 0x19, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e,
	0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75,
	0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x17, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x72, 0x0a, 0x1d, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x30, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x6f, 0x75, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x19, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5d, 0x0a, 0x1d,
	0x65, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x1a, 0x65, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x59, 0x0a, 0x1b, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x18, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44,
	0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x22, 0x82, 0x01, 0x0a, 0x14, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52,
	0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x20, 0x01, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x59,
	0x0a, 0x15, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e,
	0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x3a, 0x0b, 0xaa, 0xe1,
	0x1c, 0x07, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x20, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x09, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20,
	0x01, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7d, 0x0a, 0x21, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c,
	0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f,
	0x75, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x22, 0x8e, 0x03, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01,
	0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x20, 0x01, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x10,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e,
	0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x52, 0x0f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x12, 0x4a, 0x0a, 0x0b, 0x67,
	0x73, 0x69, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x67, 0x73, 0x69,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x73,
	0x12, 0x21, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x3a, 0x45, 0xb2, 0xe1, 0x1c, 0x41, 0x0a, 0x3f, 0x0a, 0x1c, 0x63, 0x6c, 0x75,
	0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x7b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x7d, 0x2f, 0x7b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x7b, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x22, 0x5a, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x3a, 0x0b, 0xaa, 0xe1, 0x1c, 0x07, 0x0a,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x9c, 0x04, 0x0a, 0x06, 0x44, 0x44, 0x42, 0x41, 0x50,
	0x49, 0x12, 0x9d, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x2c, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2f, 0xaa, 0xe1, 0x1c, 0x02, 0x08, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01,
	0x2a, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x6f, 0x64, 0x62, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0xcd, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x12,
	0x38, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x63, 0x6c, 0x75, 0x74,
	0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x75, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0xaa, 0xe1, 0x1c, 0x02, 0x08, 0x02, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x22, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x73, 0x12, 0xa1, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x2d, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77,
	0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x30, 0xaa, 0xe1, 0x1c, 0x02, 0x08, 0x03, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x79, 0x66, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x77, 0x73, 0x2f,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x64, 0x62, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aws_dynamodb_v1_dynamodb_proto_rawDescOnce sync.Once
	file_aws_dynamodb_v1_dynamodb_proto_rawDescData = file_aws_dynamodb_v1_dynamodb_proto_rawDesc
)

func file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP() []byte {
	file_aws_dynamodb_v1_dynamodb_proto_rawDescOnce.Do(func() {
		file_aws_dynamodb_v1_dynamodb_proto_rawDescData = protoimpl.X.CompressGZIP(file_aws_dynamodb_v1_dynamodb_proto_rawDescData)
	})
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescData
}

var file_aws_dynamodb_v1_dynamodb_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_aws_dynamodb_v1_dynamodb_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_aws_dynamodb_v1_dynamodb_proto_goTypes = []interface{}{
	(Table_Status)(0),                         // 0: clutch.aws.dynamodb.v1.Table.Status
	(Table_BillingMode)(0),                    // 1: clutch.aws.dynamodb.v1.Table.BillingMode
	(GlobalSecondaryIndex_Status)(0),          // 2: clutch.aws.dynamodb.v1.GlobalSecondaryIndex.Status
	(KeySchema_Type)(0),                       // 3: clutch.aws.dynamodb.v1.KeySchema.Type
	(ContinuousBackups_Status)(0),             // 4: clutch.aws.dynamodb.v1.ContinuousBackups.Status
	(*Table)(nil),                             // 5: clutch.aws.dynamodb.v1.Table
	(*GlobalSecondaryIndex)(nil),              // 6: clutch.aws.dynamodb.v1.GlobalSecondaryIndex
	(*IndexUpdateAction)(nil),                 // 7: clutch.aws.dynamodb.v1.IndexUpdateAction
	(*Throughput)(nil),                        // 8: clutch.aws.dynamodb.v1.Throughput
	(*KeySchema)(nil),                         // 9: clutch.aws.dynamodb.v1.KeySchema
	(*AttributeDefinition)(nil),               // 10: clutch.aws.dynamodb.v1.AttributeDefinition
	(*ContinuousBackups)(nil),                 // 11: clutch.aws.dynamodb.v1.ContinuousBackups
	(*DescribeTableRequest)(nil),              // 12: clutch.aws.dynamodb.v1.DescribeTableRequest
	(*DescribeTableResponse)(nil),             // 13: clutch.aws.dynamodb.v1.DescribeTableResponse
	(*DescribeContinuousBackupsRequest)(nil),  // 14: clutch.aws.dynamodb.v1.DescribeContinuousBackupsRequest
	(*DescribeContinuousBackupsResponse)(nil), // 15: clutch.aws.dynamodb.v1.DescribeContinuousBackupsResponse
	(*UpdateCapacityRequest)(nil),             // 16: clutch.aws.dynamodb.v1.UpdateCapacityRequest
	(*UpdateCapacityResponse)(nil),            // 17: clutch.aws.dynamodb.v1.UpdateCapacityResponse
	(*timestamppb.Timestamp)(nil),             // 18: google.protobuf.Timestamp
}
var file_aws_dynamodb_v1_dynamodb_proto_depIdxs = []int32{
	6,  // 0: clutch.aws.dynamodb.v1.Table.global_secondary_indexes:type_name -> clutch.aws.dynamodb.v1.GlobalSecondaryIndex
	8,  // 1: clutch.aws.dynamodb.v1.Table.provisioned_throughput:type_name -> clutch.aws.dynamodb.v1.Throughput
	0,  // 2: clutch.aws.dynamodb.v1.Table.status:type_name -> clutch.aws.dynamodb.v1.Table.Status
	1,  // 3: clutch.aws.dynamodb.v1.Table.billing_mode:type_name -> clutch.aws.dynamodb.v1.Table.BillingMode
	9,  // 4: clutch.aws.dynamodb.v1.Table.key_schemas:type_name -> clutch.aws.dynamodb.v1.KeySchema
	10, // 5: clutch.aws.dynamodb.v1.Table.attribute_definitions:type_name -> clutch.aws.dynamodb.v1.AttributeDefinition
	8,  // 6: clutch.aws.dynamodb.v1.GlobalSecondaryIndex.provisioned_throughput:type_name -> clutch.aws.dynamodb.v1.Throughput
	2,  // 7: clutch.aws.dynamodb.v1.GlobalSecondaryIndex.status:type_name -> clutch.aws.dynamodb.v1.GlobalSecondaryIndex.Status
	8,  // 8: clutch.aws.dynamodb.v1.IndexUpdateAction.index_throughput:type_name -> clutch.aws.dynamodb.v1.Throughput
	3,  // 9: clutch.aws.dynamodb.v1.KeySchema.type:type_name -> clutch.aws.dynamodb.v1.KeySchema.Type
	4,  // 10: clutch.aws.dynamodb.v1.ContinuousBackups.continuous_backups_status:type_name -> clutch.aws.dynamodb.v1.ContinuousBackups.Status
	4,  // 11: clutch.aws.dynamodb.v1.ContinuousBackups.point_in_time_recovery_status:type_name -> clutch.aws.dynamodb.v1.ContinuousBackups.Status
	18, // 12: clutch.aws.dynamodb.v1.ContinuousBackups.earliest_restorable_date_time:type_name -> google.protobuf.Timestamp
	18, // 13: clutch.aws.dynamodb.v1.ContinuousBackups.latest_restorable_date_time:type_name -> google.protobuf.Timestamp
	5,  // 14: clutch.aws.dynamodb.v1.DescribeTableResponse.table:type_name -> clutch.aws.dynamodb.v1.Table
	11, // 15: clutch.aws.dynamodb.v1.DescribeContinuousBackupsResponse.continuous_backups:type_name -> clutch.aws.dynamodb.v1.ContinuousBackups
	8,  // 16: clutch.aws.dynamodb.v1.UpdateCapacityRequest.table_throughput:type_name -> clutch.aws.dynamodb.v1.Throughput
	7,  // 17: clutch.aws.dynamodb.v1.UpdateCapacityRequest.gsi_updates:type_name -> clutch.aws.dynamodb.v1.IndexUpdateAction
	5,  // 18: clutch.aws.dynamodb.v1.UpdateCapacityResponse.table:type_name -> clutch.aws.dynamodb.v1.Table
	12, // 19: clutch.aws.dynamodb.v1.DDBAPI.DescribeTable:input_type -> clutch.aws.dynamodb.v1.DescribeTableRequest
	14, // 20: clutch.aws.dynamodb.v1.DDBAPI.DescribeContinuousBackups:input_type -> clutch.aws.dynamodb.v1.DescribeContinuousBackupsRequest
	16, // 21: clutch.aws.dynamodb.v1.DDBAPI.UpdateCapacity:input_type -> clutch.aws.dynamodb.v1.UpdateCapacityRequest
	13, // 22: clutch.aws.dynamodb.v1.DDBAPI.DescribeTable:output_type -> clutch.aws.dynamodb.v1.DescribeTableResponse
	15, // 23: clutch.aws.dynamodb.v1.DDBAPI.DescribeContinuousBackups:output_type -> clutch.aws.dynamodb.v1.DescribeContinuousBackupsResponse
	17, // 24: clutch.aws.dynamodb.v1.DDBAPI.UpdateCapacity:output_type -> clutch.aws.dynamodb.v1.UpdateCapacityResponse
	22, // [22:25] is the sub-list for method output_type
	19, // [19:22] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_aws_dynamodb_v1_dynamodb_proto_init() }
func file_aws_dynamodb_v1_dynamodb_proto_init() {
	if File_aws_dynamodb_v1_dynamodb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalSecondaryIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexUpdateAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Throughput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeySchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContinuousBackups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeContinuousBackupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeContinuousBackupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCapacityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCapacityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aws_dynamodb_v1_dynamodb_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aws_dynamodb_v1_dynamodb_proto_goTypes,
		DependencyIndexes: file_aws_dynamodb_v1_dynamodb_proto_depIdxs,
		EnumInfos:         file_aws_dynamodb_v1_dynamodb_proto_enumTypes,
		MessageInfos:      file_aws_dynamodb_v1_dynamodb_proto_msgTypes,
	}.Build()
	File_aws_dynamodb_v1_dynamodb_proto = out.File
	file_aws_dynamodb_v1_dynamodb_proto_rawDesc = nil
	file_aws_dynamodb_v1_dynamodb_proto_goTypes = nil
	file_aws_dynamodb_v1_dynamodb_proto_depIdxs = nil
}
