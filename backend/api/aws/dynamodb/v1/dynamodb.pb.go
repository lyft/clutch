// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: aws/dynamodb/v1/dynamodb.proto

package ddbv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/lyft/clutch/backend/api/api/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_TableDescription.html
type Status int32

const (
	// Unspecified status indicates the table status could not be found.
	Status_UNSPECIFIED                         Status = 0
	Status_UNKNOWN                             Status = 1
	Status_CREATING                            Status = 2
	Status_UPDATING                            Status = 3
	Status_DELETING                            Status = 4
	Status_ACTIVE                              Status = 5
	Status_INACCESSIBLE_ENCRYPTION_CREDENTIALS Status = 6
	Status_ARCHIVING                           Status = 7
	Status_ARCHIVED                            Status = 8
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "UNKNOWN",
		2: "CREATING",
		3: "UPDATING",
		4: "DELETING",
		5: "ACTIVE",
		6: "INACCESSIBLE_ENCRYPTION_CREDENTIALS",
		7: "ARCHIVING",
		8: "ARCHIVED",
	}
	Status_value = map[string]int32{
		"UNSPECIFIED":                         0,
		"UNKNOWN":                             1,
		"CREATING":                            2,
		"UPDATING":                            3,
		"DELETING":                            4,
		"ACTIVE":                              5,
		"INACCESSIBLE_ENCRYPTION_CREDENTIALS": 6,
		"ARCHIVING":                           7,
		"ARCHIVED":                            8,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_aws_dynamodb_v1_dynamodb_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_aws_dynamodb_v1_dynamodb_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{0}
}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Region                 string                  `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	GlobalSecondaryIndexes []*GlobalSecondaryIndex `protobuf:"bytes,3,rep,name=global_secondary_indexes,json=globalSecondaryIndexes,proto3" json:"global_secondary_indexes,omitempty"`
	ProvisionedThroughput  *ProvisionedThroughput  `protobuf:"bytes,4,opt,name=provisioned_throughput,json=provisionedThroughput,proto3" json:"provisioned_throughput,omitempty"`
	Status                 Status                  `protobuf:"varint,5,opt,name=status,proto3,enum=clutch.aws.dynamodb.v1.Status" json:"status,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{0}
}

func (x *Table) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Table) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Table) GetGlobalSecondaryIndexes() []*GlobalSecondaryIndex {
	if x != nil {
		return x.GlobalSecondaryIndexes
	}
	return nil
}

func (x *Table) GetProvisionedThroughput() *ProvisionedThroughput {
	if x != nil {
		return x.ProvisionedThroughput
	}
	return nil
}

func (x *Table) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNSPECIFIED
}

type GlobalSecondaryIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ProvisionedThroughput *ProvisionedThroughput `protobuf:"bytes,2,opt,name=provisioned_throughput,json=provisionedThroughput,proto3" json:"provisioned_throughput,omitempty"`
}

func (x *GlobalSecondaryIndex) Reset() {
	*x = GlobalSecondaryIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalSecondaryIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSecondaryIndex) ProtoMessage() {}

func (x *GlobalSecondaryIndex) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSecondaryIndex.ProtoReflect.Descriptor instead.
func (*GlobalSecondaryIndex) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{1}
}

func (x *GlobalSecondaryIndex) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GlobalSecondaryIndex) GetProvisionedThroughput() *ProvisionedThroughput {
	if x != nil {
		return x.ProvisionedThroughput
	}
	return nil
}

type ProvisionedThroughput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WriteCapacityUnits int64 `protobuf:"varint,1,opt,name=write_capacity_units,json=writeCapacityUnits,proto3" json:"write_capacity_units,omitempty"`
	ReadCapacityUnits  int64 `protobuf:"varint,2,opt,name=read_capacity_units,json=readCapacityUnits,proto3" json:"read_capacity_units,omitempty"`
}

func (x *ProvisionedThroughput) Reset() {
	*x = ProvisionedThroughput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionedThroughput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionedThroughput) ProtoMessage() {}

func (x *ProvisionedThroughput) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionedThroughput.ProtoReflect.Descriptor instead.
func (*ProvisionedThroughput) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{2}
}

func (x *ProvisionedThroughput) GetWriteCapacityUnits() int64 {
	if x != nil {
		return x.WriteCapacityUnits
	}
	return 0
}

func (x *ProvisionedThroughput) GetReadCapacityUnits() int64 {
	if x != nil {
		return x.ReadCapacityUnits
	}
	return 0
}

type DescribeTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Region    string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *DescribeTableRequest) Reset() {
	*x = DescribeTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTableRequest) ProtoMessage() {}

func (x *DescribeTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTableRequest.ProtoReflect.Descriptor instead.
func (*DescribeTableRequest) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{3}
}

func (x *DescribeTableRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *DescribeTableRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type DescribeTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table *Table `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *DescribeTableResponse) Reset() {
	*x = DescribeTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTableResponse) ProtoMessage() {}

func (x *DescribeTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTableResponse.ProtoReflect.Descriptor instead.
func (*DescribeTableResponse) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{4}
}

func (x *DescribeTableResponse) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

type UpdateTableCapacityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName      string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Region         string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	TargetTableRcu int64  `protobuf:"varint,3,opt,name=target_table_rcu,json=targetTableRcu,proto3" json:"target_table_rcu,omitempty"`
	TargetTableWcu int64  `protobuf:"varint,4,opt,name=target_table_wcu,json=targetTableWcu,proto3" json:"target_table_wcu,omitempty"`
}

func (x *UpdateTableCapacityRequest) Reset() {
	*x = UpdateTableCapacityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTableCapacityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTableCapacityRequest) ProtoMessage() {}

func (x *UpdateTableCapacityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTableCapacityRequest.ProtoReflect.Descriptor instead.
func (*UpdateTableCapacityRequest) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTableCapacityRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UpdateTableCapacityRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateTableCapacityRequest) GetTargetTableRcu() int64 {
	if x != nil {
		return x.TargetTableRcu
	}
	return 0
}

func (x *UpdateTableCapacityRequest) GetTargetTableWcu() int64 {
	if x != nil {
		return x.TargetTableWcu
	}
	return 0
}

type UpdateTableCapacityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName   string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	TableStatus Status `protobuf:"varint,2,opt,name=table_status,json=tableStatus,proto3,enum=clutch.aws.dynamodb.v1.Status" json:"table_status,omitempty"`
}

func (x *UpdateTableCapacityResponse) Reset() {
	*x = UpdateTableCapacityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTableCapacityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTableCapacityResponse) ProtoMessage() {}

func (x *UpdateTableCapacityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTableCapacityResponse.ProtoReflect.Descriptor instead.
func (*UpdateTableCapacityResponse) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTableCapacityResponse) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UpdateTableCapacityResponse) GetTableStatus() Status {
	if x != nil {
		return x.TableStatus
	}
	return Status_UNSPECIFIED
}

type UpdateGSICapacityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName      string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Region         string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	IndexName      string `protobuf:"bytes,3,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	TargetIndexRcu int64  `protobuf:"varint,4,opt,name=target_index_rcu,json=targetIndexRcu,proto3" json:"target_index_rcu,omitempty"`
	TargetIndexWcu int64  `protobuf:"varint,5,opt,name=target_index_wcu,json=targetIndexWcu,proto3" json:"target_index_wcu,omitempty"`
}

func (x *UpdateGSICapacityRequest) Reset() {
	*x = UpdateGSICapacityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGSICapacityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGSICapacityRequest) ProtoMessage() {}

func (x *UpdateGSICapacityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGSICapacityRequest.ProtoReflect.Descriptor instead.
func (*UpdateGSICapacityRequest) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateGSICapacityRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UpdateGSICapacityRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateGSICapacityRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *UpdateGSICapacityRequest) GetTargetIndexRcu() int64 {
	if x != nil {
		return x.TargetIndexRcu
	}
	return 0
}

func (x *UpdateGSICapacityRequest) GetTargetIndexWcu() int64 {
	if x != nil {
		return x.TargetIndexWcu
	}
	return 0
}

type UpdateGSICapacityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName   string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	IndexName   string `protobuf:"bytes,2,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	TableStatus Status `protobuf:"varint,3,opt,name=table_status,json=tableStatus,proto3,enum=clutch.aws.dynamodb.v1.Status" json:"table_status,omitempty"`
}

func (x *UpdateGSICapacityResponse) Reset() {
	*x = UpdateGSICapacityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGSICapacityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGSICapacityResponse) ProtoMessage() {}

func (x *UpdateGSICapacityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_dynamodb_v1_dynamodb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGSICapacityResponse.ProtoReflect.Descriptor instead.
func (*UpdateGSICapacityResponse) Descriptor() ([]byte, []int) {
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateGSICapacityResponse) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UpdateGSICapacityResponse) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *UpdateGSICapacityResponse) GetTableStatus() Status {
	if x != nil {
		return x.TableStatus
	}
	return Status_UNSPECIFIED
}

var File_aws_dynamodb_v1_dynamodb_proto protoreflect.FileDescriptor

var file_aws_dynamodb_v1_dynamodb_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x77, 0x73, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x16, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x18, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x02, 0x0a, 0x05, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x66, 0x0a, 0x18, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x16, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x64, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68,
	0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x68, 0x72, 0x6f,
	0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x64, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x12, 0x36, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x35, 0xb2, 0xe1, 0x1c, 0x31, 0x0a, 0x2f, 0x0a, 0x1c, 0x63,
	0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0f, 0x7b, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x22, 0x90, 0x01, 0x0a,
	0x14, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x64, 0x0a, 0x16, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68,
	0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6c, 0x75, 0x74,
	0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x68,
	0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x22,
	0x79, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x68,
	0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x77, 0x72, 0x69, 0x74, 0x65, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x61, 0x64, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x22, 0x5f, 0x0a, 0x14, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52,
	0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x20, 0x01, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x59, 0x0a, 0x15, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x3a, 0x0b, 0xaa, 0xe1, 0x1c, 0x07, 0x0a,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x20, 0x01, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72,
	0x63, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x63, 0x75, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x77, 0x63, 0x75, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x57,
	0x63, 0x75, 0x22, 0x7f, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x41, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e,
	0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xdf, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x53,
	0x49, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x09, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20,
	0x01, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0a, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x72, 0x63, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x63, 0x75, 0x12, 0x28, 0x0a, 0x10, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x77, 0x63, 0x75, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x57, 0x63, 0x75, 0x22, 0x9c, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x53, 0x49, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x41, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68,
	0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2a, 0xa2, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x05, 0x12, 0x27, 0x0a, 0x23, 0x49, 0x4e, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x49,
	0x42, 0x4c, 0x45, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43,
	0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x53, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09,
	0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x44, 0x10, 0x08, 0x32, 0x90, 0x04, 0x0a, 0x06, 0x44, 0x44,
	0x42, 0x41, 0x50, 0x49, 0x12, 0x9d, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2c, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e,
	0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77,
	0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x77, 0x73, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0xaa, 0xe1,
	0x1c, 0x02, 0x08, 0x02, 0x12, 0xb5, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x32, 0x2e, 0x63,
	0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x22, 0x24, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x3a, 0x01, 0x2a, 0xaa, 0xe1, 0x1c, 0x02, 0x08, 0x03, 0x12, 0xad, 0x01, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x53, 0x49, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x30, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x53, 0x49, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77,
	0x73, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x53, 0x49, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x22,
	0x22, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64,
	0x62, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x53, 0x49, 0x43, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x3a, 0x01, 0x2a, 0xaa, 0xe1, 0x1c, 0x02, 0x08, 0x03, 0x42, 0x3a, 0x5a, 0x38,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x79, 0x66, 0x74, 0x2f,
	0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x64, 0x62, 0x2f,
	0x76, 0x31, 0x3b, 0x64, 0x64, 0x62, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aws_dynamodb_v1_dynamodb_proto_rawDescOnce sync.Once
	file_aws_dynamodb_v1_dynamodb_proto_rawDescData = file_aws_dynamodb_v1_dynamodb_proto_rawDesc
)

func file_aws_dynamodb_v1_dynamodb_proto_rawDescGZIP() []byte {
	file_aws_dynamodb_v1_dynamodb_proto_rawDescOnce.Do(func() {
		file_aws_dynamodb_v1_dynamodb_proto_rawDescData = protoimpl.X.CompressGZIP(file_aws_dynamodb_v1_dynamodb_proto_rawDescData)
	})
	return file_aws_dynamodb_v1_dynamodb_proto_rawDescData
}

var file_aws_dynamodb_v1_dynamodb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_aws_dynamodb_v1_dynamodb_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_aws_dynamodb_v1_dynamodb_proto_goTypes = []interface{}{
	(Status)(0),                         // 0: clutch.aws.dynamodb.v1.Status
	(*Table)(nil),                       // 1: clutch.aws.dynamodb.v1.Table
	(*GlobalSecondaryIndex)(nil),        // 2: clutch.aws.dynamodb.v1.GlobalSecondaryIndex
	(*ProvisionedThroughput)(nil),       // 3: clutch.aws.dynamodb.v1.ProvisionedThroughput
	(*DescribeTableRequest)(nil),        // 4: clutch.aws.dynamodb.v1.DescribeTableRequest
	(*DescribeTableResponse)(nil),       // 5: clutch.aws.dynamodb.v1.DescribeTableResponse
	(*UpdateTableCapacityRequest)(nil),  // 6: clutch.aws.dynamodb.v1.UpdateTableCapacityRequest
	(*UpdateTableCapacityResponse)(nil), // 7: clutch.aws.dynamodb.v1.UpdateTableCapacityResponse
	(*UpdateGSICapacityRequest)(nil),    // 8: clutch.aws.dynamodb.v1.UpdateGSICapacityRequest
	(*UpdateGSICapacityResponse)(nil),   // 9: clutch.aws.dynamodb.v1.UpdateGSICapacityResponse
}
var file_aws_dynamodb_v1_dynamodb_proto_depIdxs = []int32{
	2,  // 0: clutch.aws.dynamodb.v1.Table.global_secondary_indexes:type_name -> clutch.aws.dynamodb.v1.GlobalSecondaryIndex
	3,  // 1: clutch.aws.dynamodb.v1.Table.provisioned_throughput:type_name -> clutch.aws.dynamodb.v1.ProvisionedThroughput
	0,  // 2: clutch.aws.dynamodb.v1.Table.status:type_name -> clutch.aws.dynamodb.v1.Status
	3,  // 3: clutch.aws.dynamodb.v1.GlobalSecondaryIndex.provisioned_throughput:type_name -> clutch.aws.dynamodb.v1.ProvisionedThroughput
	1,  // 4: clutch.aws.dynamodb.v1.DescribeTableResponse.table:type_name -> clutch.aws.dynamodb.v1.Table
	0,  // 5: clutch.aws.dynamodb.v1.UpdateTableCapacityResponse.table_status:type_name -> clutch.aws.dynamodb.v1.Status
	0,  // 6: clutch.aws.dynamodb.v1.UpdateGSICapacityResponse.table_status:type_name -> clutch.aws.dynamodb.v1.Status
	4,  // 7: clutch.aws.dynamodb.v1.DDBAPI.DescribeTable:input_type -> clutch.aws.dynamodb.v1.DescribeTableRequest
	6,  // 8: clutch.aws.dynamodb.v1.DDBAPI.UpdateTableCapacity:input_type -> clutch.aws.dynamodb.v1.UpdateTableCapacityRequest
	8,  // 9: clutch.aws.dynamodb.v1.DDBAPI.UpdateGSICapacity:input_type -> clutch.aws.dynamodb.v1.UpdateGSICapacityRequest
	5,  // 10: clutch.aws.dynamodb.v1.DDBAPI.DescribeTable:output_type -> clutch.aws.dynamodb.v1.DescribeTableResponse
	7,  // 11: clutch.aws.dynamodb.v1.DDBAPI.UpdateTableCapacity:output_type -> clutch.aws.dynamodb.v1.UpdateTableCapacityResponse
	9,  // 12: clutch.aws.dynamodb.v1.DDBAPI.UpdateGSICapacity:output_type -> clutch.aws.dynamodb.v1.UpdateGSICapacityResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_aws_dynamodb_v1_dynamodb_proto_init() }
func file_aws_dynamodb_v1_dynamodb_proto_init() {
	if File_aws_dynamodb_v1_dynamodb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalSecondaryIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionedThroughput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTableCapacityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTableCapacityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGSICapacityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_dynamodb_v1_dynamodb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGSICapacityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aws_dynamodb_v1_dynamodb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aws_dynamodb_v1_dynamodb_proto_goTypes,
		DependencyIndexes: file_aws_dynamodb_v1_dynamodb_proto_depIdxs,
		EnumInfos:         file_aws_dynamodb_v1_dynamodb_proto_enumTypes,
		MessageInfos:      file_aws_dynamodb_v1_dynamodb_proto_msgTypes,
	}.Build()
	File_aws_dynamodb_v1_dynamodb_proto = out.File
	file_aws_dynamodb_v1_dynamodb_proto_rawDesc = nil
	file_aws_dynamodb_v1_dynamodb_proto_goTypes = nil
	file_aws_dynamodb_v1_dynamodb_proto_depIdxs = nil
}
