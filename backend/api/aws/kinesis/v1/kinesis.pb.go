// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: aws/kinesis/v1/kinesis.proto

package kinesisv1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/lyft/clutch/backend/api/api/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamName string `protobuf:"bytes,1,opt,name=stream_name,json=streamName,proto3" json:"stream_name,omitempty"`
	Region     string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *GetStreamRequest) Reset() {
	*x = GetStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_kinesis_v1_kinesis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamRequest) ProtoMessage() {}

func (x *GetStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_kinesis_v1_kinesis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamRequest.ProtoReflect.Descriptor instead.
func (*GetStreamRequest) Descriptor() ([]byte, []int) {
	return file_aws_kinesis_v1_kinesis_proto_rawDescGZIP(), []int{0}
}

func (x *GetStreamRequest) GetStreamName() string {
	if x != nil {
		return x.StreamName
	}
	return ""
}

func (x *GetStreamRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type GetStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stream *Stream `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
}

func (x *GetStreamResponse) Reset() {
	*x = GetStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_kinesis_v1_kinesis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamResponse) ProtoMessage() {}

func (x *GetStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_kinesis_v1_kinesis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamResponse.ProtoReflect.Descriptor instead.
func (*GetStreamResponse) Descriptor() ([]byte, []int) {
	return file_aws_kinesis_v1_kinesis_proto_rawDescGZIP(), []int{1}
}

func (x *GetStreamResponse) GetStream() *Stream {
	if x != nil {
		return x.Stream
	}
	return nil
}

type UpdateShardCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamName       string `protobuf:"bytes,1,opt,name=stream_name,json=streamName,proto3" json:"stream_name,omitempty"`
	Region           string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	TargetShardCount uint32 `protobuf:"varint,3,opt,name=target_shard_count,json=targetShardCount,proto3" json:"target_shard_count,omitempty"`
}

func (x *UpdateShardCountRequest) Reset() {
	*x = UpdateShardCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_kinesis_v1_kinesis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShardCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShardCountRequest) ProtoMessage() {}

func (x *UpdateShardCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_kinesis_v1_kinesis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShardCountRequest.ProtoReflect.Descriptor instead.
func (*UpdateShardCountRequest) Descriptor() ([]byte, []int) {
	return file_aws_kinesis_v1_kinesis_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateShardCountRequest) GetStreamName() string {
	if x != nil {
		return x.StreamName
	}
	return ""
}

func (x *UpdateShardCountRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateShardCountRequest) GetTargetShardCount() uint32 {
	if x != nil {
		return x.TargetShardCount
	}
	return 0
}

type UpdateShardCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateShardCountResponse) Reset() {
	*x = UpdateShardCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_kinesis_v1_kinesis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShardCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShardCountResponse) ProtoMessage() {}

func (x *UpdateShardCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_kinesis_v1_kinesis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShardCountResponse.ProtoReflect.Descriptor instead.
func (*UpdateShardCountResponse) Descriptor() ([]byte, []int) {
	return file_aws_kinesis_v1_kinesis_proto_rawDescGZIP(), []int{3}
}

type Stream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamName        string `protobuf:"bytes,1,opt,name=stream_name,json=streamName,proto3" json:"stream_name,omitempty"`
	Region            string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	CurrentShardCount uint32 `protobuf:"varint,3,opt,name=current_shard_count,json=currentShardCount,proto3" json:"current_shard_count,omitempty"`
}

func (x *Stream) Reset() {
	*x = Stream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_kinesis_v1_kinesis_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stream) ProtoMessage() {}

func (x *Stream) ProtoReflect() protoreflect.Message {
	mi := &file_aws_kinesis_v1_kinesis_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stream.ProtoReflect.Descriptor instead.
func (*Stream) Descriptor() ([]byte, []int) {
	return file_aws_kinesis_v1_kinesis_proto_rawDescGZIP(), []int{4}
}

func (x *Stream) GetStreamName() string {
	if x != nil {
		return x.StreamName
	}
	return ""
}

func (x *Stream) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Stream) GetCurrentShardCount() uint32 {
	if x != nil {
		return x.CurrentShardCount
	}
	return 0
}

var File_aws_kinesis_v1_kinesis_proto protoreflect.FileDescriptor

var file_aws_kinesis_v1_kinesis_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x77, 0x73, 0x2f, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15,
	0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x6b, 0x69, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x6b, 0x69, 0x6e,
	0x65, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x3a, 0x0c, 0xaa, 0xe1, 0x1c, 0x08, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x3c, 0xb2, 0xe1, 0x1c, 0x38, 0x0a, 0x36, 0x0a,
	0x1c, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x6b, 0x69, 0x6e, 0x65,
	0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x7b,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x7b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x32, 0xc2, 0x02, 0x0a, 0x0a, 0x4b, 0x69, 0x6e, 0x65, 0x73, 0x69,
	0x73, 0x41, 0x50, 0x49, 0x12, 0x8a, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x27, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e,
	0x6b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6c,
	0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2f, 0x67,
	0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x3a, 0x01, 0x2a, 0xaa, 0xe1, 0x1c, 0x02, 0x08,
	0x02, 0x12, 0xa6, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e,
	0x61, 0x77, 0x73, 0x2e, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e,
	0x61, 0x77, 0x73, 0x2e, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22,
	0x20, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x6b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x3a, 0x01, 0x2a, 0xaa, 0xe1, 0x1c, 0x02, 0x08, 0x03, 0x42, 0x0b, 0x5a, 0x09, 0x6b, 0x69,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aws_kinesis_v1_kinesis_proto_rawDescOnce sync.Once
	file_aws_kinesis_v1_kinesis_proto_rawDescData = file_aws_kinesis_v1_kinesis_proto_rawDesc
)

func file_aws_kinesis_v1_kinesis_proto_rawDescGZIP() []byte {
	file_aws_kinesis_v1_kinesis_proto_rawDescOnce.Do(func() {
		file_aws_kinesis_v1_kinesis_proto_rawDescData = protoimpl.X.CompressGZIP(file_aws_kinesis_v1_kinesis_proto_rawDescData)
	})
	return file_aws_kinesis_v1_kinesis_proto_rawDescData
}

var file_aws_kinesis_v1_kinesis_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_aws_kinesis_v1_kinesis_proto_goTypes = []interface{}{
	(*GetStreamRequest)(nil),         // 0: clutch.aws.kinesis.v1.GetStreamRequest
	(*GetStreamResponse)(nil),        // 1: clutch.aws.kinesis.v1.GetStreamResponse
	(*UpdateShardCountRequest)(nil),  // 2: clutch.aws.kinesis.v1.UpdateShardCountRequest
	(*UpdateShardCountResponse)(nil), // 3: clutch.aws.kinesis.v1.UpdateShardCountResponse
	(*Stream)(nil),                   // 4: clutch.aws.kinesis.v1.Stream
}
var file_aws_kinesis_v1_kinesis_proto_depIdxs = []int32{
	4, // 0: clutch.aws.kinesis.v1.GetStreamResponse.stream:type_name -> clutch.aws.kinesis.v1.Stream
	0, // 1: clutch.aws.kinesis.v1.KinesisAPI.GetStream:input_type -> clutch.aws.kinesis.v1.GetStreamRequest
	2, // 2: clutch.aws.kinesis.v1.KinesisAPI.UpdateShardCount:input_type -> clutch.aws.kinesis.v1.UpdateShardCountRequest
	1, // 3: clutch.aws.kinesis.v1.KinesisAPI.GetStream:output_type -> clutch.aws.kinesis.v1.GetStreamResponse
	3, // 4: clutch.aws.kinesis.v1.KinesisAPI.UpdateShardCount:output_type -> clutch.aws.kinesis.v1.UpdateShardCountResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_aws_kinesis_v1_kinesis_proto_init() }
func file_aws_kinesis_v1_kinesis_proto_init() {
	if File_aws_kinesis_v1_kinesis_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aws_kinesis_v1_kinesis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_kinesis_v1_kinesis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_kinesis_v1_kinesis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShardCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_kinesis_v1_kinesis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShardCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_kinesis_v1_kinesis_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aws_kinesis_v1_kinesis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aws_kinesis_v1_kinesis_proto_goTypes,
		DependencyIndexes: file_aws_kinesis_v1_kinesis_proto_depIdxs,
		MessageInfos:      file_aws_kinesis_v1_kinesis_proto_msgTypes,
	}.Build()
	File_aws_kinesis_v1_kinesis_proto = out.File
	file_aws_kinesis_v1_kinesis_proto_rawDesc = nil
	file_aws_kinesis_v1_kinesis_proto_goTypes = nil
	file_aws_kinesis_v1_kinesis_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KinesisAPIClient is the client API for KinesisAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KinesisAPIClient interface {
	GetStream(ctx context.Context, in *GetStreamRequest, opts ...grpc.CallOption) (*GetStreamResponse, error)
	UpdateShardCount(ctx context.Context, in *UpdateShardCountRequest, opts ...grpc.CallOption) (*UpdateShardCountResponse, error)
}

type kinesisAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewKinesisAPIClient(cc grpc.ClientConnInterface) KinesisAPIClient {
	return &kinesisAPIClient{cc}
}

func (c *kinesisAPIClient) GetStream(ctx context.Context, in *GetStreamRequest, opts ...grpc.CallOption) (*GetStreamResponse, error) {
	out := new(GetStreamResponse)
	err := c.cc.Invoke(ctx, "/clutch.aws.kinesis.v1.KinesisAPI/GetStream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kinesisAPIClient) UpdateShardCount(ctx context.Context, in *UpdateShardCountRequest, opts ...grpc.CallOption) (*UpdateShardCountResponse, error) {
	out := new(UpdateShardCountResponse)
	err := c.cc.Invoke(ctx, "/clutch.aws.kinesis.v1.KinesisAPI/UpdateShardCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KinesisAPIServer is the server API for KinesisAPI service.
type KinesisAPIServer interface {
	GetStream(context.Context, *GetStreamRequest) (*GetStreamResponse, error)
	UpdateShardCount(context.Context, *UpdateShardCountRequest) (*UpdateShardCountResponse, error)
}

// UnimplementedKinesisAPIServer can be embedded to have forward compatible implementations.
type UnimplementedKinesisAPIServer struct {
}

func (*UnimplementedKinesisAPIServer) GetStream(context.Context, *GetStreamRequest) (*GetStreamResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStream not implemented")
}
func (*UnimplementedKinesisAPIServer) UpdateShardCount(context.Context, *UpdateShardCountRequest) (*UpdateShardCountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateShardCount not implemented")
}

func RegisterKinesisAPIServer(s *grpc.Server, srv KinesisAPIServer) {
	s.RegisterService(&_KinesisAPI_serviceDesc, srv)
}

func _KinesisAPI_GetStream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KinesisAPIServer).GetStream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clutch.aws.kinesis.v1.KinesisAPI/GetStream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KinesisAPIServer).GetStream(ctx, req.(*GetStreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KinesisAPI_UpdateShardCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateShardCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KinesisAPIServer).UpdateShardCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clutch.aws.kinesis.v1.KinesisAPI/UpdateShardCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KinesisAPIServer).UpdateShardCount(ctx, req.(*UpdateShardCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KinesisAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clutch.aws.kinesis.v1.KinesisAPI",
	HandlerType: (*KinesisAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStream",
			Handler:    _KinesisAPI_GetStream_Handler,
		},
		{
			MethodName: "UpdateShardCount",
			Handler:    _KinesisAPI_UpdateShardCount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aws/kinesis/v1/kinesis.proto",
}
