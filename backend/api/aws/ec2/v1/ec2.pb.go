// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: aws/ec2/v1/ec2.proto

package ec2v1

import (
	context "context"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/lyft/clutch/backend/api/api/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AutoscalingGroup_TerminationPolicy int32

const (
	AutoscalingGroup_UNSPECIFIED                 AutoscalingGroup_TerminationPolicy = 0
	AutoscalingGroup_UNKNOWN                     AutoscalingGroup_TerminationPolicy = 1
	AutoscalingGroup_OLDEST_INSTANCE             AutoscalingGroup_TerminationPolicy = 2
	AutoscalingGroup_NEWEST_INSTANCE             AutoscalingGroup_TerminationPolicy = 3
	AutoscalingGroup_OLDEST_LAUNCH_CONFIGURATION AutoscalingGroup_TerminationPolicy = 4
	AutoscalingGroup_CLOSEST_TO_NEXT_HOUR        AutoscalingGroup_TerminationPolicy = 5
	AutoscalingGroup_DEFAULT                     AutoscalingGroup_TerminationPolicy = 6
	AutoscalingGroup_OLDEST_LAUNCH_TEMPLATE      AutoscalingGroup_TerminationPolicy = 7
	AutoscalingGroup_ALLOCATION_STRATEGY         AutoscalingGroup_TerminationPolicy = 8
)

// Enum value maps for AutoscalingGroup_TerminationPolicy.
var (
	AutoscalingGroup_TerminationPolicy_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "UNKNOWN",
		2: "OLDEST_INSTANCE",
		3: "NEWEST_INSTANCE",
		4: "OLDEST_LAUNCH_CONFIGURATION",
		5: "CLOSEST_TO_NEXT_HOUR",
		6: "DEFAULT",
		7: "OLDEST_LAUNCH_TEMPLATE",
		8: "ALLOCATION_STRATEGY",
	}
	AutoscalingGroup_TerminationPolicy_value = map[string]int32{
		"UNSPECIFIED":                 0,
		"UNKNOWN":                     1,
		"OLDEST_INSTANCE":             2,
		"NEWEST_INSTANCE":             3,
		"OLDEST_LAUNCH_CONFIGURATION": 4,
		"CLOSEST_TO_NEXT_HOUR":        5,
		"DEFAULT":                     6,
		"OLDEST_LAUNCH_TEMPLATE":      7,
		"ALLOCATION_STRATEGY":         8,
	}
)

func (x AutoscalingGroup_TerminationPolicy) Enum() *AutoscalingGroup_TerminationPolicy {
	p := new(AutoscalingGroup_TerminationPolicy)
	*p = x
	return p
}

func (x AutoscalingGroup_TerminationPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AutoscalingGroup_TerminationPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_aws_ec2_v1_ec2_proto_enumTypes[0].Descriptor()
}

func (AutoscalingGroup_TerminationPolicy) Type() protoreflect.EnumType {
	return &file_aws_ec2_v1_ec2_proto_enumTypes[0]
}

func (x AutoscalingGroup_TerminationPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AutoscalingGroup_TerminationPolicy.Descriptor instead.
func (AutoscalingGroup_TerminationPolicy) EnumDescriptor() ([]byte, []int) {
	return file_aws_ec2_v1_ec2_proto_rawDescGZIP(), []int{3, 0}
}

type AutoscalingGroup_Instance_LifecycleState int32

const (
	AutoscalingGroup_Instance_UNSPECIFIED         AutoscalingGroup_Instance_LifecycleState = 0
	AutoscalingGroup_Instance_UNKNOWN             AutoscalingGroup_Instance_LifecycleState = 1
	AutoscalingGroup_Instance_PENDING             AutoscalingGroup_Instance_LifecycleState = 2
	AutoscalingGroup_Instance_PENDING_WAIT        AutoscalingGroup_Instance_LifecycleState = 3
	AutoscalingGroup_Instance_PENDING_PROCEED     AutoscalingGroup_Instance_LifecycleState = 4
	AutoscalingGroup_Instance_QUARANTINED         AutoscalingGroup_Instance_LifecycleState = 5
	AutoscalingGroup_Instance_IN_SERVICE          AutoscalingGroup_Instance_LifecycleState = 6
	AutoscalingGroup_Instance_TERMINATING         AutoscalingGroup_Instance_LifecycleState = 7
	AutoscalingGroup_Instance_TERMINATING_WAIT    AutoscalingGroup_Instance_LifecycleState = 8
	AutoscalingGroup_Instance_TERMINATING_PROCEED AutoscalingGroup_Instance_LifecycleState = 9
	AutoscalingGroup_Instance_TERMINATED          AutoscalingGroup_Instance_LifecycleState = 10
	AutoscalingGroup_Instance_DETACHING           AutoscalingGroup_Instance_LifecycleState = 11
	AutoscalingGroup_Instance_DETACHED            AutoscalingGroup_Instance_LifecycleState = 12
	AutoscalingGroup_Instance_ENTERING_STANDBY    AutoscalingGroup_Instance_LifecycleState = 13
	AutoscalingGroup_Instance_STANDBY             AutoscalingGroup_Instance_LifecycleState = 14
)

// Enum value maps for AutoscalingGroup_Instance_LifecycleState.
var (
	AutoscalingGroup_Instance_LifecycleState_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "UNKNOWN",
		2:  "PENDING",
		3:  "PENDING_WAIT",
		4:  "PENDING_PROCEED",
		5:  "QUARANTINED",
		6:  "IN_SERVICE",
		7:  "TERMINATING",
		8:  "TERMINATING_WAIT",
		9:  "TERMINATING_PROCEED",
		10: "TERMINATED",
		11: "DETACHING",
		12: "DETACHED",
		13: "ENTERING_STANDBY",
		14: "STANDBY",
	}
	AutoscalingGroup_Instance_LifecycleState_value = map[string]int32{
		"UNSPECIFIED":         0,
		"UNKNOWN":             1,
		"PENDING":             2,
		"PENDING_WAIT":        3,
		"PENDING_PROCEED":     4,
		"QUARANTINED":         5,
		"IN_SERVICE":          6,
		"TERMINATING":         7,
		"TERMINATING_WAIT":    8,
		"TERMINATING_PROCEED": 9,
		"TERMINATED":          10,
		"DETACHING":           11,
		"DETACHED":            12,
		"ENTERING_STANDBY":    13,
		"STANDBY":             14,
	}
)

func (x AutoscalingGroup_Instance_LifecycleState) Enum() *AutoscalingGroup_Instance_LifecycleState {
	p := new(AutoscalingGroup_Instance_LifecycleState)
	*p = x
	return p
}

func (x AutoscalingGroup_Instance_LifecycleState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AutoscalingGroup_Instance_LifecycleState) Descriptor() protoreflect.EnumDescriptor {
	return file_aws_ec2_v1_ec2_proto_enumTypes[1].Descriptor()
}

func (AutoscalingGroup_Instance_LifecycleState) Type() protoreflect.EnumType {
	return &file_aws_ec2_v1_ec2_proto_enumTypes[1]
}

func (x AutoscalingGroup_Instance_LifecycleState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AutoscalingGroup_Instance_LifecycleState.Descriptor instead.
func (AutoscalingGroup_Instance_LifecycleState) EnumDescriptor() ([]byte, []int) {
	return file_aws_ec2_v1_ec2_proto_rawDescGZIP(), []int{3, 0, 0}
}

// https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_InstanceState.html
type Instance_State int32

const (
	Instance_UNSPECIFIED   Instance_State = 0
	Instance_UNKNOWN       Instance_State = 1
	Instance_PENDING       Instance_State = 2
	Instance_RUNNING       Instance_State = 3
	Instance_STOPPING      Instance_State = 4
	Instance_STOPPED       Instance_State = 5
	Instance_SHUTTING_DOWN Instance_State = 6
	Instance_TERMINATED    Instance_State = 7
)

// Enum value maps for Instance_State.
var (
	Instance_State_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "UNKNOWN",
		2: "PENDING",
		3: "RUNNING",
		4: "STOPPING",
		5: "STOPPED",
		6: "SHUTTING_DOWN",
		7: "TERMINATED",
	}
	Instance_State_value = map[string]int32{
		"UNSPECIFIED":   0,
		"UNKNOWN":       1,
		"PENDING":       2,
		"RUNNING":       3,
		"STOPPING":      4,
		"STOPPED":       5,
		"SHUTTING_DOWN": 6,
		"TERMINATED":    7,
	}
)

func (x Instance_State) Enum() *Instance_State {
	p := new(Instance_State)
	*p = x
	return p
}

func (x Instance_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Instance_State) Descriptor() protoreflect.EnumDescriptor {
	return file_aws_ec2_v1_ec2_proto_enumTypes[2].Descriptor()
}

func (Instance_State) Type() protoreflect.EnumType {
	return &file_aws_ec2_v1_ec2_proto_enumTypes[2]
}

func (x Instance_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Instance_State.Descriptor instead.
func (Instance_State) EnumDescriptor() ([]byte, []int) {
	return file_aws_ec2_v1_ec2_proto_rawDescGZIP(), []int{8, 0}
}

type AutoscalingGroupSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min     uint32 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max     uint32 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	Desired uint32 `protobuf:"varint,3,opt,name=desired,proto3" json:"desired,omitempty"`
}

func (x *AutoscalingGroupSize) Reset() {
	*x = AutoscalingGroupSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ec2_v1_ec2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoscalingGroupSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoscalingGroupSize) ProtoMessage() {}

func (x *AutoscalingGroupSize) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ec2_v1_ec2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoscalingGroupSize.ProtoReflect.Descriptor instead.
func (*AutoscalingGroupSize) Descriptor() ([]byte, []int) {
	return file_aws_ec2_v1_ec2_proto_rawDescGZIP(), []int{0}
}

func (x *AutoscalingGroupSize) GetMin() uint32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *AutoscalingGroupSize) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *AutoscalingGroupSize) GetDesired() uint32 {
	if x != nil {
		return x.Desired
	}
	return 0
}

type ResizeAutoscalingGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Region string                `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Size   *AutoscalingGroupSize `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ResizeAutoscalingGroupRequest) Reset() {
	*x = ResizeAutoscalingGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ec2_v1_ec2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResizeAutoscalingGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeAutoscalingGroupRequest) ProtoMessage() {}

func (x *ResizeAutoscalingGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ec2_v1_ec2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeAutoscalingGroupRequest.ProtoReflect.Descriptor instead.
func (*ResizeAutoscalingGroupRequest) Descriptor() ([]byte, []int) {
	return file_aws_ec2_v1_ec2_proto_rawDescGZIP(), []int{1}
}

func (x *ResizeAutoscalingGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResizeAutoscalingGroupRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ResizeAutoscalingGroupRequest) GetSize() *AutoscalingGroupSize {
	if x != nil {
		return x.Size
	}
	return nil
}

type ResizeAutoscalingGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResizeAutoscalingGroupResponse) Reset() {
	*x = ResizeAutoscalingGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ec2_v1_ec2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResizeAutoscalingGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeAutoscalingGroupResponse) ProtoMessage() {}

func (x *ResizeAutoscalingGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ec2_v1_ec2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeAutoscalingGroupResponse.ProtoReflect.Descriptor instead.
func (*ResizeAutoscalingGroupResponse) Descriptor() ([]byte, []int) {
	return file_aws_ec2_v1_ec2_proto_rawDescGZIP(), []int{2}
}

type AutoscalingGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Region string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	// The AZs the ASG is running in.
	Zones               []string                             `protobuf:"bytes,3,rep,name=zones,proto3" json:"zones,omitempty"`
	Size                *AutoscalingGroupSize                `protobuf:"bytes,4,opt,name=size,proto3" json:"size,omitempty"`
	TerminationPolicies []AutoscalingGroup_TerminationPolicy `protobuf:"varint,5,rep,packed,name=termination_policies,json=terminationPolicies,proto3,enum=clutch.aws.ec2.v1.AutoscalingGroup_TerminationPolicy" json:"termination_policies,omitempty"`
	Instances           []*AutoscalingGroup_Instance         `protobuf:"bytes,6,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *AutoscalingGroup) Reset() {
	*x = AutoscalingGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ec2_v1_ec2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoscalingGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoscalingGroup) ProtoMessage() {}

func (x *AutoscalingGroup) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ec2_v1_ec2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoscalingGroup.ProtoReflect.Descriptor instead.
func (*AutoscalingGroup) Descriptor() ([]byte, []int) {
	return file_aws_ec2_v1_ec2_proto_rawDescGZIP(), []int{3}
}

func (x *AutoscalingGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AutoscalingGroup) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AutoscalingGroup) GetZones() []string {
	if x != nil {
		return x.Zones
	}
	return nil
}

func (x *AutoscalingGroup) GetSize() *AutoscalingGroupSize {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *AutoscalingGroup) GetTerminationPolicies() []AutoscalingGroup_TerminationPolicy {
	if x != nil {
		return x.TerminationPolicies
	}
	return nil
}

func (x *AutoscalingGroup) GetInstances() []*AutoscalingGroup_Instance {
	if x != nil {
		return x.Instances
	}
	return nil
}

type GetInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Region     string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *GetInstanceRequest) Reset() {
	*x = GetInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ec2_v1_ec2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceRequest) ProtoMessage() {}

func (x *GetInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ec2_v1_ec2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceRequest.ProtoReflect.Descriptor instead.
func (*GetInstanceRequest) Descriptor() ([]byte, []int) {
	return file_aws_ec2_v1_ec2_proto_rawDescGZIP(), []int{4}
}

func (x *GetInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *GetInstanceRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type GetInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance *Instance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *GetInstanceResponse) Reset() {
	*x = GetInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ec2_v1_ec2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceResponse) ProtoMessage() {}

func (x *GetInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ec2_v1_ec2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceResponse.ProtoReflect.Descriptor instead.
func (*GetInstanceResponse) Descriptor() ([]byte, []int) {
	return file_aws_ec2_v1_ec2_proto_rawDescGZIP(), []int{5}
}

func (x *GetInstanceResponse) GetInstance() *Instance {
	if x != nil {
		return x.Instance
	}
	return nil
}

type TerminateInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Region     string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *TerminateInstanceRequest) Reset() {
	*x = TerminateInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ec2_v1_ec2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateInstanceRequest) ProtoMessage() {}

func (x *TerminateInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ec2_v1_ec2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateInstanceRequest.ProtoReflect.Descriptor instead.
func (*TerminateInstanceRequest) Descriptor() ([]byte, []int) {
	return file_aws_ec2_v1_ec2_proto_rawDescGZIP(), []int{6}
}

func (x *TerminateInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *TerminateInstanceRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type TerminateInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TerminateInstanceResponse) Reset() {
	*x = TerminateInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ec2_v1_ec2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateInstanceResponse) ProtoMessage() {}

func (x *TerminateInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ec2_v1_ec2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateInstanceResponse.ProtoReflect.Descriptor instead.
func (*TerminateInstanceResponse) Descriptor() ([]byte, []int) {
	return file_aws_ec2_v1_ec2_proto_rawDescGZIP(), []int{7}
}

type Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId       string            `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Region           string            `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	State            Instance_State    `protobuf:"varint,3,opt,name=state,proto3,enum=clutch.aws.ec2.v1.Instance_State" json:"state,omitempty"`
	InstanceType     string            `protobuf:"bytes,4,opt,name=instance_type,json=instanceType,proto3" json:"instance_type,omitempty"`
	PublicIpAddress  string            `protobuf:"bytes,5,opt,name=public_ip_address,json=publicIpAddress,proto3" json:"public_ip_address,omitempty"`
	PrivateIpAddress string            `protobuf:"bytes,6,opt,name=private_ip_address,json=privateIpAddress,proto3" json:"private_ip_address,omitempty"`
	AvailabilityZone string            `protobuf:"bytes,7,opt,name=availability_zone,json=availabilityZone,proto3" json:"availability_zone,omitempty"`
	Tags             map[string]string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Instance) Reset() {
	*x = Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ec2_v1_ec2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ec2_v1_ec2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_aws_ec2_v1_ec2_proto_rawDescGZIP(), []int{8}
}

func (x *Instance) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *Instance) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Instance) GetState() Instance_State {
	if x != nil {
		return x.State
	}
	return Instance_UNSPECIFIED
}

func (x *Instance) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *Instance) GetPublicIpAddress() string {
	if x != nil {
		return x.PublicIpAddress
	}
	return ""
}

func (x *Instance) GetPrivateIpAddress() string {
	if x != nil {
		return x.PrivateIpAddress
	}
	return ""
}

func (x *Instance) GetAvailabilityZone() string {
	if x != nil {
		return x.AvailabilityZone
	}
	return ""
}

func (x *Instance) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AutoscalingGroup_Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string                                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Zone                    string                                   `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	LaunchConfigurationName string                                   `protobuf:"bytes,3,opt,name=launch_configuration_name,json=launchConfigurationName,proto3" json:"launch_configuration_name,omitempty"`
	Healthy                 bool                                     `protobuf:"varint,4,opt,name=healthy,proto3" json:"healthy,omitempty"`
	LifecycleState          AutoscalingGroup_Instance_LifecycleState `protobuf:"varint,5,opt,name=lifecycle_state,json=lifecycleState,proto3,enum=clutch.aws.ec2.v1.AutoscalingGroup_Instance_LifecycleState" json:"lifecycle_state,omitempty"`
}

func (x *AutoscalingGroup_Instance) Reset() {
	*x = AutoscalingGroup_Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ec2_v1_ec2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoscalingGroup_Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoscalingGroup_Instance) ProtoMessage() {}

func (x *AutoscalingGroup_Instance) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ec2_v1_ec2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoscalingGroup_Instance.ProtoReflect.Descriptor instead.
func (*AutoscalingGroup_Instance) Descriptor() ([]byte, []int) {
	return file_aws_ec2_v1_ec2_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AutoscalingGroup_Instance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AutoscalingGroup_Instance) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *AutoscalingGroup_Instance) GetLaunchConfigurationName() string {
	if x != nil {
		return x.LaunchConfigurationName
	}
	return ""
}

func (x *AutoscalingGroup_Instance) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *AutoscalingGroup_Instance) GetLifecycleState() AutoscalingGroup_Instance_LifecycleState {
	if x != nil {
		return x.LifecycleState
	}
	return AutoscalingGroup_Instance_UNSPECIFIED
}

var File_aws_ec2_v1_ec2_proto protoreflect.FileDescriptor

var file_aws_ec2_v1_ec2_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x77, 0x73, 0x2f, 0x65, 0x63, 0x32, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x63, 0x32,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61,
	0x77, 0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x14, 0x41, 0x75,
	0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x22, 0xe1, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x73,
	0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x45, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x3a, 0x3b, 0xb2, 0xe1, 0x1c, 0x37, 0x0a, 0x35, 0x0a,
	0x22, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x0f, 0x7b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x22, 0x20, 0x0a, 0x1e, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe2, 0x08, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x6f, 0x73,
	0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x3b, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6c,
	0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x68, 0x0a, 0x14, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63,
	0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x13, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68,
	0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f,
	0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x1a, 0x80, 0x04, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e,
	0x65, 0x12, 0x3a, 0x0a, 0x19, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x12, 0x64, 0x0a, 0x0f, 0x6c, 0x69, 0x66, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3b, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63,
	0x32, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x6c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x93, 0x02,
	0x0a, 0x0e, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x50,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x10, 0x03, 0x12, 0x13, 0x0a,
	0x0f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x45, 0x44,
	0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x51, 0x55, 0x41, 0x52, 0x41, 0x4e, 0x54, 0x49, 0x4e, 0x45,
	0x44, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54,
	0x49, 0x4e, 0x47, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x45,
	0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x45,
	0x44, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x54, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x47,
	0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x54, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x0c,
	0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41,
	0x4e, 0x44, 0x42, 0x59, 0x10, 0x0d, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x42,
	0x59, 0x10, 0x0e, 0x22, 0xd8, 0x01, 0x0a, 0x11, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x4c, 0x44, 0x45, 0x53,
	0x54, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x4e, 0x45, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10,
	0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x4f, 0x4c, 0x44, 0x45, 0x53, 0x54, 0x5f, 0x4c, 0x41, 0x55, 0x4e,
	0x43, 0x48, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x4f,
	0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x4c, 0x44,
	0x45, 0x53, 0x54, 0x5f, 0x4c, 0x41, 0x55, 0x4e, 0x43, 0x48, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c,
	0x41, 0x54, 0x45, 0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x10, 0x08, 0x3a, 0x3b,
	0xb2, 0xe1, 0x1c, 0x37, 0x0a, 0x35, 0x0a, 0x22, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61,
	0x77, 0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63,
	0x61, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0f, 0x7b, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x22, 0x9b, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0xb2,
	0xe1, 0x1c, 0x36, 0x0a, 0x34, 0x0a, 0x1a, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77,
	0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x16, 0x7b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x7b, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x22, 0x5e, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e,
	0x65, 0x63, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x3a, 0x0e, 0xaa, 0xe1, 0x1c, 0x0a, 0x0a,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x18, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x20, 0x01, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x3a, 0x3a, 0xb2, 0xe1, 0x1c, 0x36, 0x0a, 0x34, 0x0a, 0x1a, 0x63, 0x6c, 0x75, 0x74, 0x63,
	0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x7b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x7d, 0x2f,
	0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x22, 0x1b, 0x0a,
	0x19, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd7, 0x04, 0x0a, 0x08, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x37, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73,
	0x2e, 0x65, 0x63, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7d, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54,
	0x4f, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x4f, 0x50,
	0x50, 0x45, 0x44, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x48, 0x55, 0x54, 0x54, 0x49, 0x4e,
	0x47, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x45, 0x52, 0x4d,
	0x49, 0x4e, 0x41, 0x54, 0x45, 0x44, 0x10, 0x07, 0x3a, 0x3a, 0xb2, 0xe1, 0x1c, 0x36, 0x0a, 0x34,
	0x0a, 0x1a, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x7b, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x7d, 0x32, 0xe7, 0x03, 0x0a, 0x06, 0x45, 0x43, 0x32, 0x41, 0x50, 0x49, 0x12,
	0x86, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x25, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e,
	0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x77, 0x73, 0x2f,
	0x65, 0x63, 0x32, 0x2f, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x3a,
	0x01, 0x2a, 0xaa, 0xe1, 0x1c, 0x02, 0x08, 0x02, 0x12, 0x9e, 0x01, 0x0a, 0x11, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2b,
	0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6c,
	0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x22, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x65, 0x63, 0x32, 0x2f, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x3a, 0x01, 0x2a, 0xaa, 0xe1, 0x1c, 0x02, 0x08, 0x04, 0x12, 0xb2, 0x01, 0x0a, 0x16, 0x52, 0x65,
	0x73, 0x69, 0x7a, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x30, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77,
	0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x41,
	0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e,
	0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x7a,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x27, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x65, 0x63, 0x32, 0x2f, 0x72,
	0x65, 0x73, 0x69, 0x7a, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x3a, 0x01, 0x2a, 0xaa, 0xe1, 0x1c, 0x02, 0x08, 0x03, 0x42, 0x07,
	0x5a, 0x05, 0x65, 0x63, 0x32, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aws_ec2_v1_ec2_proto_rawDescOnce sync.Once
	file_aws_ec2_v1_ec2_proto_rawDescData = file_aws_ec2_v1_ec2_proto_rawDesc
)

func file_aws_ec2_v1_ec2_proto_rawDescGZIP() []byte {
	file_aws_ec2_v1_ec2_proto_rawDescOnce.Do(func() {
		file_aws_ec2_v1_ec2_proto_rawDescData = protoimpl.X.CompressGZIP(file_aws_ec2_v1_ec2_proto_rawDescData)
	})
	return file_aws_ec2_v1_ec2_proto_rawDescData
}

var file_aws_ec2_v1_ec2_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_aws_ec2_v1_ec2_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_aws_ec2_v1_ec2_proto_goTypes = []interface{}{
	(AutoscalingGroup_TerminationPolicy)(0),       // 0: clutch.aws.ec2.v1.AutoscalingGroup.TerminationPolicy
	(AutoscalingGroup_Instance_LifecycleState)(0), // 1: clutch.aws.ec2.v1.AutoscalingGroup.Instance.LifecycleState
	(Instance_State)(0),                           // 2: clutch.aws.ec2.v1.Instance.State
	(*AutoscalingGroupSize)(nil),                  // 3: clutch.aws.ec2.v1.AutoscalingGroupSize
	(*ResizeAutoscalingGroupRequest)(nil),         // 4: clutch.aws.ec2.v1.ResizeAutoscalingGroupRequest
	(*ResizeAutoscalingGroupResponse)(nil),        // 5: clutch.aws.ec2.v1.ResizeAutoscalingGroupResponse
	(*AutoscalingGroup)(nil),                      // 6: clutch.aws.ec2.v1.AutoscalingGroup
	(*GetInstanceRequest)(nil),                    // 7: clutch.aws.ec2.v1.GetInstanceRequest
	(*GetInstanceResponse)(nil),                   // 8: clutch.aws.ec2.v1.GetInstanceResponse
	(*TerminateInstanceRequest)(nil),              // 9: clutch.aws.ec2.v1.TerminateInstanceRequest
	(*TerminateInstanceResponse)(nil),             // 10: clutch.aws.ec2.v1.TerminateInstanceResponse
	(*Instance)(nil),                              // 11: clutch.aws.ec2.v1.Instance
	(*AutoscalingGroup_Instance)(nil),             // 12: clutch.aws.ec2.v1.AutoscalingGroup.Instance
	nil,                                           // 13: clutch.aws.ec2.v1.Instance.TagsEntry
}
var file_aws_ec2_v1_ec2_proto_depIdxs = []int32{
	3,  // 0: clutch.aws.ec2.v1.ResizeAutoscalingGroupRequest.size:type_name -> clutch.aws.ec2.v1.AutoscalingGroupSize
	3,  // 1: clutch.aws.ec2.v1.AutoscalingGroup.size:type_name -> clutch.aws.ec2.v1.AutoscalingGroupSize
	0,  // 2: clutch.aws.ec2.v1.AutoscalingGroup.termination_policies:type_name -> clutch.aws.ec2.v1.AutoscalingGroup.TerminationPolicy
	12, // 3: clutch.aws.ec2.v1.AutoscalingGroup.instances:type_name -> clutch.aws.ec2.v1.AutoscalingGroup.Instance
	11, // 4: clutch.aws.ec2.v1.GetInstanceResponse.instance:type_name -> clutch.aws.ec2.v1.Instance
	2,  // 5: clutch.aws.ec2.v1.Instance.state:type_name -> clutch.aws.ec2.v1.Instance.State
	13, // 6: clutch.aws.ec2.v1.Instance.tags:type_name -> clutch.aws.ec2.v1.Instance.TagsEntry
	1,  // 7: clutch.aws.ec2.v1.AutoscalingGroup.Instance.lifecycle_state:type_name -> clutch.aws.ec2.v1.AutoscalingGroup.Instance.LifecycleState
	7,  // 8: clutch.aws.ec2.v1.EC2API.GetInstance:input_type -> clutch.aws.ec2.v1.GetInstanceRequest
	9,  // 9: clutch.aws.ec2.v1.EC2API.TerminateInstance:input_type -> clutch.aws.ec2.v1.TerminateInstanceRequest
	4,  // 10: clutch.aws.ec2.v1.EC2API.ResizeAutoscalingGroup:input_type -> clutch.aws.ec2.v1.ResizeAutoscalingGroupRequest
	8,  // 11: clutch.aws.ec2.v1.EC2API.GetInstance:output_type -> clutch.aws.ec2.v1.GetInstanceResponse
	10, // 12: clutch.aws.ec2.v1.EC2API.TerminateInstance:output_type -> clutch.aws.ec2.v1.TerminateInstanceResponse
	5,  // 13: clutch.aws.ec2.v1.EC2API.ResizeAutoscalingGroup:output_type -> clutch.aws.ec2.v1.ResizeAutoscalingGroupResponse
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_aws_ec2_v1_ec2_proto_init() }
func file_aws_ec2_v1_ec2_proto_init() {
	if File_aws_ec2_v1_ec2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aws_ec2_v1_ec2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoscalingGroupSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_ec2_v1_ec2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResizeAutoscalingGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_ec2_v1_ec2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResizeAutoscalingGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_ec2_v1_ec2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoscalingGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_ec2_v1_ec2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_ec2_v1_ec2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_ec2_v1_ec2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_ec2_v1_ec2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_ec2_v1_ec2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_ec2_v1_ec2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoscalingGroup_Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aws_ec2_v1_ec2_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aws_ec2_v1_ec2_proto_goTypes,
		DependencyIndexes: file_aws_ec2_v1_ec2_proto_depIdxs,
		EnumInfos:         file_aws_ec2_v1_ec2_proto_enumTypes,
		MessageInfos:      file_aws_ec2_v1_ec2_proto_msgTypes,
	}.Build()
	File_aws_ec2_v1_ec2_proto = out.File
	file_aws_ec2_v1_ec2_proto_rawDesc = nil
	file_aws_ec2_v1_ec2_proto_goTypes = nil
	file_aws_ec2_v1_ec2_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EC2APIClient is the client API for EC2API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EC2APIClient interface {
	GetInstance(ctx context.Context, in *GetInstanceRequest, opts ...grpc.CallOption) (*GetInstanceResponse, error)
	TerminateInstance(ctx context.Context, in *TerminateInstanceRequest, opts ...grpc.CallOption) (*TerminateInstanceResponse, error)
	ResizeAutoscalingGroup(ctx context.Context, in *ResizeAutoscalingGroupRequest, opts ...grpc.CallOption) (*ResizeAutoscalingGroupResponse, error)
}

type eC2APIClient struct {
	cc grpc.ClientConnInterface
}

func NewEC2APIClient(cc grpc.ClientConnInterface) EC2APIClient {
	return &eC2APIClient{cc}
}

func (c *eC2APIClient) GetInstance(ctx context.Context, in *GetInstanceRequest, opts ...grpc.CallOption) (*GetInstanceResponse, error) {
	out := new(GetInstanceResponse)
	err := c.cc.Invoke(ctx, "/clutch.aws.ec2.v1.EC2API/GetInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eC2APIClient) TerminateInstance(ctx context.Context, in *TerminateInstanceRequest, opts ...grpc.CallOption) (*TerminateInstanceResponse, error) {
	out := new(TerminateInstanceResponse)
	err := c.cc.Invoke(ctx, "/clutch.aws.ec2.v1.EC2API/TerminateInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eC2APIClient) ResizeAutoscalingGroup(ctx context.Context, in *ResizeAutoscalingGroupRequest, opts ...grpc.CallOption) (*ResizeAutoscalingGroupResponse, error) {
	out := new(ResizeAutoscalingGroupResponse)
	err := c.cc.Invoke(ctx, "/clutch.aws.ec2.v1.EC2API/ResizeAutoscalingGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EC2APIServer is the server API for EC2API service.
type EC2APIServer interface {
	GetInstance(context.Context, *GetInstanceRequest) (*GetInstanceResponse, error)
	TerminateInstance(context.Context, *TerminateInstanceRequest) (*TerminateInstanceResponse, error)
	ResizeAutoscalingGroup(context.Context, *ResizeAutoscalingGroupRequest) (*ResizeAutoscalingGroupResponse, error)
}

// UnimplementedEC2APIServer can be embedded to have forward compatible implementations.
type UnimplementedEC2APIServer struct {
}

func (*UnimplementedEC2APIServer) GetInstance(context.Context, *GetInstanceRequest) (*GetInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstance not implemented")
}
func (*UnimplementedEC2APIServer) TerminateInstance(context.Context, *TerminateInstanceRequest) (*TerminateInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TerminateInstance not implemented")
}
func (*UnimplementedEC2APIServer) ResizeAutoscalingGroup(context.Context, *ResizeAutoscalingGroupRequest) (*ResizeAutoscalingGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResizeAutoscalingGroup not implemented")
}

func RegisterEC2APIServer(s *grpc.Server, srv EC2APIServer) {
	s.RegisterService(&_EC2API_serviceDesc, srv)
}

func _EC2API_GetInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EC2APIServer).GetInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clutch.aws.ec2.v1.EC2API/GetInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EC2APIServer).GetInstance(ctx, req.(*GetInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EC2API_TerminateInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TerminateInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EC2APIServer).TerminateInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clutch.aws.ec2.v1.EC2API/TerminateInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EC2APIServer).TerminateInstance(ctx, req.(*TerminateInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EC2API_ResizeAutoscalingGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResizeAutoscalingGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EC2APIServer).ResizeAutoscalingGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clutch.aws.ec2.v1.EC2API/ResizeAutoscalingGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EC2APIServer).ResizeAutoscalingGroup(ctx, req.(*ResizeAutoscalingGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EC2API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clutch.aws.ec2.v1.EC2API",
	HandlerType: (*EC2APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInstance",
			Handler:    _EC2API_GetInstance_Handler,
		},
		{
			MethodName: "TerminateInstance",
			Handler:    _EC2API_TerminateInstance_Handler,
		},
		{
			MethodName: "ResizeAutoscalingGroup",
			Handler:    _EC2API_ResizeAutoscalingGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aws/ec2/v1/ec2.proto",
}
